/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * WkFgPanOne.java
 *
 * Created on 04.08.2010, 13:44:05
 */
package de.cismet.cids.custom.objectrenderer.wrrl_db_mv;

import javax.swing.JLabel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import de.cismet.cids.custom.util.CidsBeanSupport;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.DisposableCidsBeanStore;

import de.cismet.cids.editors.DefaultCustomObjectEditor;

/**
 * DOCUMENT ME!
 *
 * @author   therter
 * @version  $Revision$, $Date$
 */
public class WkFgPanThirteen extends javax.swing.JPanel implements DisposableCidsBeanStore, ListSelectionListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(WkFgPanTen.class);

    //~ Instance fields --------------------------------------------------------

    private final de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanThirteen.MstTableModel model =
        new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanThirteen.MstTableModel();
    private CidsBean cidsBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jtMstTab1;
    private javax.swing.JLabel lblBemerk;
    private javax.swing.JLabel lblBemerkMst;
    private javax.swing.JLabel lblChemStat;
    private javax.swing.JLabel lblChemicalstatusnitrat;
    private javax.swing.JLabel lblEqsHm;
    private javax.swing.JLabel lblEqsHmMst;
    private javax.swing.JLabel lblEqsHmMstVal;
    private javax.swing.JLabel lblEqsIndPol;
    private javax.swing.JLabel lblEqsIndPolMst;
    private javax.swing.JLabel lblEqsOthpl;
    private javax.swing.JLabel lblEqsOthplMst;
    private javax.swing.JLabel lblEqsOthplVal;
    private javax.swing.JLabel lblEqsPestic;
    private javax.swing.JLabel lblEqsPesticMst;
    private javax.swing.JLabel lblEqsPesticMstVal;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblIndPolMstVal;
    private javax.swing.JLabel lblNonComp;
    private javax.swing.JLabel lblSpace;
    private javax.swing.JLabel lblUEcoBemerkMst;
    private javax.swing.JLabel lblUEcoMst;
    private javax.swing.JLabel lblUEcoMstVal;
    private javax.swing.JLabel lblValChemStat;
    private javax.swing.JLabel lblValChemStatBem;
    private javax.swing.JLabel lblValChemStatJahr;
    private javax.swing.JLabel lblValChemicalstatusNitrat;
    private javax.swing.JLabel lblValEqsHm;
    private javax.swing.JLabel lblValEqsHmW;
    private javax.swing.JLabel lblValEqsIndpol;
    private javax.swing.JLabel lblValEqsIndpolW;
    private javax.swing.JLabel lblValEqsOthpl;
    private javax.swing.JLabel lblValEqsOthplW;
    private javax.swing.JLabel lblValEqsPestic;
    private javax.swing.JLabel lblValEqsPesticW;
    private javax.swing.JLabel lblValNonComp;
    private javax.swing.JLabel lblValNonCompW;
    private javax.swing.JLabel lblYesNo;
    private javax.swing.JLabel lblYesNoMst;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo;
    private de.cismet.tools.gui.RoundedPanel panInfo;
    private javax.swing.JPanel panInfoContent;
    private javax.swing.JLabel txtEqsHmMst;
    private javax.swing.JLabel txtEqsOthplBemerkungMst;
    private javax.swing.JLabel txtEqsPesticBemerkMst;
    private javax.swing.JLabel txtIndpolBemerkMst;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WkFgPanOne.
     */
    public WkFgPanThirteen() {
        initComponents();
        jScrollPane1.getViewport().setOpaque(false);
        jtMstTab1.getSelectionModel().addListSelectionListener(this);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panInfo = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panInfoContent = new javax.swing.JPanel();
        lblSpace = new javax.swing.JLabel();
        lblYesNo = new javax.swing.JLabel();
        lblBemerk = new javax.swing.JLabel();
        lblEqsHm = new javax.swing.JLabel();
        lblEqsPestic = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblEqsHmMst = new javax.swing.JLabel();
        lblEqsPesticMst = new javax.swing.JLabel();
        lblEqsOthplMst = new javax.swing.JLabel();
        lblEqsIndPolMst = new javax.swing.JLabel();
        lblUEcoMst = new javax.swing.JLabel();
        lblEqsHmMstVal = new javax.swing.JLabel();
        lblEqsPesticMstVal = new javax.swing.JLabel();
        lblEqsOthplVal = new javax.swing.JLabel();
        lblIndPolMstVal = new javax.swing.JLabel();
        lblUEcoMstVal = new javax.swing.JLabel();
        txtEqsHmMst = new javax.swing.JLabel();
        txtEqsPesticBemerkMst = new javax.swing.JLabel();
        txtEqsOthplBemerkungMst = new javax.swing.JLabel();
        txtIndpolBemerkMst = new javax.swing.JLabel();
        lblUEcoBemerkMst = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblYesNoMst = new javax.swing.JLabel();
        lblBemerkMst = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtMstTab1 = new javax.swing.JTable();
        lblEqsIndPol = new javax.swing.JLabel();
        lblEqsOthpl = new javax.swing.JLabel();
        lblNonComp = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        lblChemStat = new javax.swing.JLabel();
        lblChemicalstatusnitrat = new javax.swing.JLabel();
        lblValChemStat = new javax.swing.JLabel();
        lblValChemStatJahr = new javax.swing.JLabel();
        lblValChemStatBem = new javax.swing.JLabel();
        lblValChemicalstatusNitrat = new javax.swing.JLabel();
        lblValEqsHm = new javax.swing.JLabel();
        lblValEqsPestic = new javax.swing.JLabel();
        lblValEqsIndpol = new javax.swing.JLabel();
        lblValEqsOthpl = new javax.swing.JLabel();
        lblValNonComp = new javax.swing.JLabel();
        lblValEqsHmW = new javax.swing.JLabel();
        lblValEqsPesticW = new javax.swing.JLabel();
        lblValEqsIndpolW = new javax.swing.JLabel();
        lblValEqsOthplW = new javax.swing.JLabel();
        lblValNonCompW = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(910, 650));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(910, 650));
        setLayout(new java.awt.BorderLayout());

        panHeadInfo.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setLayout(new java.awt.FlowLayout());

        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblHeading.text")); // NOI18N
        panHeadInfo.add(lblHeading);

        panInfo.add(panHeadInfo, java.awt.BorderLayout.NORTH);

        jScrollPane1.setBorder(null);
        jScrollPane1.setOpaque(false);

        panInfoContent.setMaximumSize(new java.awt.Dimension(888, 400));
        panInfoContent.setMinimumSize(new java.awt.Dimension(888, 400));
        panInfoContent.setOpaque(false);
        panInfoContent.setPreferredSize(new java.awt.Dimension(888, 400));
        panInfoContent.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weighty = 1.0;
        panInfoContent.add(lblSpace, gridBagConstraints);

        lblYesNo.setText(org.openide.util.NbBundle.getMessage(WkFgPanThirteen.class, "WkFgPanThirteen.lblYesNo.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblYesNo, gridBagConstraints);

        lblBemerk.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblBemerk.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblBemerk, gridBagConstraints);

        lblEqsHm.setText(org.openide.util.NbBundle.getMessage(WkFgPanThirteen.class, "WkFgPanThirteen.EqsHm.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblEqsHm, gridBagConstraints);

        lblEqsPestic.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsPestic.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblEqsPestic, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblEqsHmMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsHmMst.text")); // NOI18N
        lblEqsHmMst.setMinimumSize(new java.awt.Dimension(230, 20));
        lblEqsHmMst.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsHmMst, gridBagConstraints);

        lblEqsPesticMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsPesticMst.text")); // NOI18N
        lblEqsPesticMst.setMinimumSize(new java.awt.Dimension(230, 20));
        lblEqsPesticMst.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsPesticMst, gridBagConstraints);

        lblEqsOthplMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsOthplMst.text")); // NOI18N
        lblEqsOthplMst.setMinimumSize(new java.awt.Dimension(230, 20));
        lblEqsOthplMst.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsOthplMst, gridBagConstraints);

        lblEqsIndPolMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsIndPolMst.text")); // NOI18N
        lblEqsIndPolMst.setMinimumSize(new java.awt.Dimension(230, 20));
        lblEqsIndPolMst.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsIndPolMst, gridBagConstraints);

        lblUEcoMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblNonCompMst.text")); // NOI18N
        lblUEcoMst.setMinimumSize(new java.awt.Dimension(230, 20));
        lblUEcoMst.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(lblUEcoMst, gridBagConstraints);

        lblEqsHmMstVal.setMinimumSize(new java.awt.Dimension(200, 20));
        lblEqsHmMstVal.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsHmMstVal, gridBagConstraints);

        lblEqsPesticMstVal.setMinimumSize(new java.awt.Dimension(200, 20));
        lblEqsPesticMstVal.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsPesticMstVal, gridBagConstraints);

        lblEqsOthplVal.setMinimumSize(new java.awt.Dimension(200, 20));
        lblEqsOthplVal.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEqsOthplVal, gridBagConstraints);

        lblIndPolMstVal.setMinimumSize(new java.awt.Dimension(200, 20));
        lblIndPolMstVal.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblIndPolMstVal, gridBagConstraints);

        lblUEcoMstVal.setMinimumSize(new java.awt.Dimension(200, 20));
        lblUEcoMstVal.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(lblUEcoMstVal, gridBagConstraints);

        txtEqsHmMst.setMinimumSize(new java.awt.Dimension(330, 20));
        txtEqsHmMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtEqsHmMst, gridBagConstraints);

        txtEqsPesticBemerkMst.setMinimumSize(new java.awt.Dimension(330, 20));
        txtEqsPesticBemerkMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtEqsPesticBemerkMst, gridBagConstraints);

        txtEqsOthplBemerkungMst.setMinimumSize(new java.awt.Dimension(330, 20));
        txtEqsOthplBemerkungMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtEqsOthplBemerkungMst, gridBagConstraints);

        txtIndpolBemerkMst.setMinimumSize(new java.awt.Dimension(330, 20));
        txtIndpolBemerkMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtIndpolBemerkMst, gridBagConstraints);

        lblUEcoBemerkMst.setMinimumSize(new java.awt.Dimension(330, 20));
        lblUEcoBemerkMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(lblUEcoBemerkMst, gridBagConstraints);

        jPanel2.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        lblYesNoMst.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblYesNoMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblYesNoMst.text")); // NOI18N
        lblYesNoMst.setMinimumSize(new java.awt.Dimension(200, 20));
        lblYesNoMst.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblYesNoMst, gridBagConstraints);

        lblBemerkMst.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBemerkMst.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblBemerkMst.text")); // NOI18N
        lblBemerkMst.setMinimumSize(new java.awt.Dimension(330, 20));
        lblBemerkMst.setPreferredSize(new java.awt.Dimension(330, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblBemerkMst, gridBagConstraints);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(800, 170));
        jScrollPane3.setOpaque(false);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(900, 170));

        jtMstTab1.setModel(model);
        jScrollPane3.setViewportView(jtMstTab1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 10);
        jPanel1.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(jPanel1, gridBagConstraints);

        lblEqsIndPol.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsIndpol.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblEqsIndPol, gridBagConstraints);

        lblEqsOthpl.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblEqsOthpl.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblEqsOthpl, gridBagConstraints);

        lblNonComp.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblNonComp.text"));     // NOI18N
        lblNonComp.setToolTipText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgThirteen.lblNonComp.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblNonComp, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        panInfoContent.add(jSeparator1, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        lblChemStat.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblChemStat.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 10, 5, 5);
        jPanel3.add(lblChemStat, gridBagConstraints);

        lblChemicalstatusnitrat.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanThirteen.class,
                "WkFgPanThirteen.lblChemicalstatusnitrat.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        jPanel3.add(lblChemicalstatusnitrat, gridBagConstraints);

        lblValChemStat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValChemStat.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValChemStat.setPreferredSize(new java.awt.Dimension(200, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.chem_stat.name}"),
                lblValChemStat,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        jPanel3.add(lblValChemStat, gridBagConstraints);

        lblValChemStatJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValChemStatJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValChemStatJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.chem_stat_jahr}"),
                lblValChemStatJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        jPanel3.add(lblValChemStatJahr, gridBagConstraints);

        lblValChemStatBem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValChemStatBem.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValChemStatBem.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.chem_stat_bemerkung}"),
                lblValChemStatBem,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        jPanel3.add(lblValChemStatBem, gridBagConstraints);

        lblValChemicalstatusNitrat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValChemicalstatusNitrat.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValChemicalstatusNitrat.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.chemicalstatusnitrat.name}"),
                lblValChemicalstatusNitrat,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 10);
        jPanel3.add(lblValChemicalstatusNitrat, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panInfoContent.add(jPanel3, gridBagConstraints);

        lblValEqsHm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsHm.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsHm.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_hm.name}"),
                lblValEqsHm,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsHm, gridBagConstraints);

        lblValEqsPestic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsPestic.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsPestic.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_pestic.name}"),
                lblValEqsPestic,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsPestic, gridBagConstraints);

        lblValEqsIndpol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsIndpol.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsIndpol.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_indpol.name}"),
                lblValEqsIndpol,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsIndpol, gridBagConstraints);

        lblValEqsOthpl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsOthpl.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsOthpl.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_othpl.name}"),
                lblValEqsOthpl,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsOthpl, gridBagConstraints);

        lblValNonComp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValNonComp.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValNonComp.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.non_comp.name}"),
                lblValNonComp,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValNonComp, gridBagConstraints);

        lblValEqsHmW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsHmW.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsHmW.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_hm_bemerkung}"),
                lblValEqsHmW,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsHmW, gridBagConstraints);

        lblValEqsPesticW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsPesticW.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsPesticW.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_pestic_bemerkung}"),
                lblValEqsPesticW,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsPesticW, gridBagConstraints);

        lblValEqsIndpolW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsIndpolW.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsIndpolW.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_indpol_bemerkung}"),
                lblValEqsIndpolW,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsIndpolW, gridBagConstraints);

        lblValEqsOthplW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEqsOthplW.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEqsOthplW.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eqs_othpl_bemerkung}"),
                lblValEqsOthplW,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEqsOthplW, gridBagConstraints);

        lblValNonCompW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValNonCompW.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValNonCompW.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.non_comp_bemerkung}"),
                lblValNonCompW,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValNonCompW, gridBagConstraints);

        jScrollPane1.setViewportView(panInfoContent);

        panInfo.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(panInfo, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        if (cidsBean != null) {
            this.cidsBean = cidsBean;
            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(
                bindingGroup,
                this.cidsBean);
            model.fireTableDataChanged();

            new Thread(new Runnable() {

                    @Override
                    public void run() {
                        model.refreshData(cidsBean);
                    }
                }).start();
            bindingGroup.bind();
        }
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();
    }

    @Override
    public void valueChanged(final ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            if (e.getFirstIndex() > -1) {
                final CidsBean sbean = model.getData().get(e.getFirstIndex());
                setMst(sbean, lblEqsHmMstVal, "u_schwermetalle", txtEqsHmMst, "u_schwermetalle_welche");
                setMst(sbean, lblEqsPesticMstVal, "u_psm", txtEqsPesticBemerkMst, "u_psm_welche");
                setMst(sbean, lblIndPolMstVal, "u_ind_stoffe", txtIndpolBemerkMst, "u_ind_stoffe_welche");
                setMst(sbean, lblEqsOthplVal, "u_andere_stoffe", txtEqsOthplBemerkungMst, "u_andere_stoffe_welche");
                setMst(sbean, lblUEcoMstVal, "u_eco_stoffe", lblUEcoBemerkMst, "u_eco_stoffe_welche");
            }
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param  sbean    DOCUMENT ME!
     * @param  lblVal   DOCUMENT ME!
     * @param  valName  DOCUMENT ME!
     * @param  lbl      DOCUMENT ME!
     * @param  name     DOCUMENT ME!
     */
    private void setMst(final CidsBean sbean,
            final JLabel lblVal,
            final String valName,
            final JLabel lbl,
            final String name) {
        Object val = sbean.getProperty(valName);

        if (val != null) {
            lblVal.setText(((Boolean)val).booleanValue() ? "ja" : "nein");
        } else {
            lblVal.setText(CidsBeanSupport.FIELD_NOT_SET);
        }

        val = sbean.getProperty(name);

        if (val != null) {
            lbl.setText(val.toString());
        } else {
            lbl.setText(CidsBeanSupport.FIELD_NOT_SET);
        }
    }
}
