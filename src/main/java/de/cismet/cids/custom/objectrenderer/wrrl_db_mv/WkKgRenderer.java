/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 *  Copyright (C) 2010 stefan
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * WkFgRenderer.java
 *
 * Created on 18.08.2010, 14:31:22
 */
package de.cismet.cids.custom.objectrenderer.wrrl_db_mv;

import org.jdesktop.beansbinding.BindingGroup;

import de.cismet.cids.custom.wrrl_db_mv.util.TabbedPaneUITransparent;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;

import de.cismet.tools.gui.FXWebViewPanel;

/**
 * DOCUMENT ME!
 *
 * @author   stefan
 * @version  $Revision$, $Date$
 */
public class WkKgRenderer extends javax.swing.JPanel implements CidsBeanRenderer {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(WkGwRenderer.class);

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;
    private BindingGroup bindingGroup;
    private final FXWebViewPanel browserPanel = new FXWebViewPanel();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JPanel panDescriptionAndRisks;
    private javax.swing.JPanel panGeneral;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadQuality1;
    private de.cismet.tools.gui.RoundedPanel panQuality1;
    private javax.swing.JPanel panQualityContent1;
    private javax.swing.JPanel panQualityInformation;
    private javax.swing.JLabel panSpace2;
    private javax.swing.JPanel panSpacingBottomTab1;
    private javax.swing.JPanel panSpacingBottomTab2;
    private javax.swing.JPanel panSpacingBottomTab3;
    private javax.swing.JPanel panStckBr;
    private javax.swing.JTabbedPane tpMain;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanEight wkKgPanEight;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanFive wkKgPanFive;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanFour wkKgPanFour;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanOne wkKgPanOne;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanSeven wkKgPanSeven;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanSix wkKgPanSix;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanThree wkKgPanThree;
    private de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanTwo wkKgPanTwo;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WkKgRenderer.
     */
    public WkKgRenderer() {
        bindingGroup = new BindingGroup();
        initComponents();
        panDescriptionAndRisks.setVisible(false);
        panQualityInformation.setVisible(false);
        tpMain.remove(panDescriptionAndRisks);
        tpMain.remove(panQualityInformation);
        jPanel5.add(browserPanel, java.awt.BorderLayout.CENTER);

        tpMain.setUI(new TabbedPaneUITransparent());
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tpMain = new javax.swing.JTabbedPane();
        panGeneral = new javax.swing.JPanel();
        wkKgPanOne = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanOne();
        panSpacingBottomTab1 = new javax.swing.JPanel();
        panDescriptionAndRisks = new javax.swing.JPanel();
        wkKgPanTwo = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanTwo();
        wkKgPanEight = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanEight();
        panSpacingBottomTab2 = new javax.swing.JPanel();
        panQualityInformation = new javax.swing.JPanel();
        wkKgPanThree = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanThree();
        wkKgPanFour = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanFour();
        wkKgPanFive = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanFive();
        wkKgPanSix = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanSix();
        wkKgPanSeven = new de.cismet.cids.custom.objectrenderer.wrrl_db_mv.WkKgPanSeven();
        panSpacingBottomTab3 = new javax.swing.JPanel();
        panStckBr = new javax.swing.JPanel();
        panQuality1 = new de.cismet.tools.gui.RoundedPanel();
        panHeadQuality1 = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading1 = new javax.swing.JLabel();
        panQualityContent1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        panSpace2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        panGeneral.setOpaque(false);
        panGeneral.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        panGeneral.add(wkKgPanOne, gridBagConstraints);

        panSpacingBottomTab1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        panGeneral.add(panSpacingBottomTab1, gridBagConstraints);

        tpMain.addTab("Allgemeines", panGeneral);

        panDescriptionAndRisks.setOpaque(false);
        panDescriptionAndRisks.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 0);
        panDescriptionAndRisks.add(wkKgPanTwo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        panDescriptionAndRisks.add(wkKgPanEight, gridBagConstraints);

        panSpacingBottomTab2.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        panDescriptionAndRisks.add(panSpacingBottomTab2, gridBagConstraints);

        tpMain.addTab("Beschreibung und Risiken", panDescriptionAndRisks);

        panQualityInformation.setOpaque(false);
        panQualityInformation.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 0);
        panQualityInformation.add(wkKgPanThree, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 15);
        panQualityInformation.add(wkKgPanFour, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        panQualityInformation.add(wkKgPanFive, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 0);
        panQualityInformation.add(wkKgPanSix, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        panQualityInformation.add(wkKgPanSeven, gridBagConstraints);

        panSpacingBottomTab3.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        panQualityInformation.add(panSpacingBottomTab3, gridBagConstraints);

        tpMain.addTab("Qualitätsinformationen", panQualityInformation);

        panStckBr.setOpaque(false);
        panStckBr.setLayout(new java.awt.GridBagLayout());

        panHeadQuality1.setBackground(new java.awt.Color(51, 51, 51));
        panHeadQuality1.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadQuality1.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadQuality1.setLayout(new java.awt.FlowLayout());

        lblHeading1.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading1.setText(org.openide.util.NbBundle.getMessage(
                WkKgRenderer.class,
                "WkKgRenderer.lblHeading1.text",
                new Object[] {})); // NOI18N
        panHeadQuality1.add(lblHeading1);

        panQuality1.add(panHeadQuality1, java.awt.BorderLayout.NORTH);

        panQualityContent1.setMinimumSize(new java.awt.Dimension(1100, 700));
        panQualityContent1.setOpaque(false);
        panQualityContent1.setPreferredSize(new java.awt.Dimension(1100, 700));
        panQualityContent1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());
        panQualityContent1.add(jPanel5, java.awt.BorderLayout.CENTER);

        panQuality1.add(panQualityContent1, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        panStckBr.add(panQuality1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        panStckBr.add(panSpace2, gridBagConstraints);

        tpMain.addTab("Steckbrief", panStckBr);

        add(tpMain, java.awt.BorderLayout.CENTER);
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        this.cidsBean = cidsBean;

        if (cidsBean != null) {
            wkKgPanOne.setCidsBean(cidsBean);
            wkKgPanTwo.setCidsBean(cidsBean);
            wkKgPanThree.setCidsBean(cidsBean);
            wkKgPanFour.setCidsBean(cidsBean);
            wkKgPanFive.setCidsBean(cidsBean);
            wkKgPanSix.setCidsBean(cidsBean);
            wkKgPanSeven.setCidsBean(cidsBean);
            wkKgPanEight.setCidsBean(cidsBean);
            browserPanel.loadUrl("https://fis-wasser-mv.de/charts/steckbriefe/cw/cw_wk.php?kg="
                        + String.valueOf(cidsBean.getProperty("wk_k")));
        }
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();
        wkKgPanOne.dispose();
        wkKgPanTwo.dispose();
        wkKgPanThree.dispose();
        wkKgPanFour.dispose();
        wkKgPanFive.dispose();
        wkKgPanSix.dispose();
        wkKgPanSeven.dispose();
        wkKgPanEight.dispose();
    }

    @Override
    public String getTitle() {
        return org.openide.util.NbBundle.getMessage(WkGwRenderer.class, "WkKgRenderer.title")
                    + String.valueOf(cidsBean);
    }

    @Override
    public void setTitle(final String title) {
        // NOP
    }
}
