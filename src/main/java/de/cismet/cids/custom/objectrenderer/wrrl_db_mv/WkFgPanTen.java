/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * WkFgPanOne.java
 *
 * Created on 04.08.2010, 13:44:05
 */
package de.cismet.cids.custom.objectrenderer.wrrl_db_mv;

import Sirius.server.middleware.types.MetaClass;

import de.cismet.cids.custom.wrrl_db_mv.util.CidsBeanSupport;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.DisposableCidsBeanStore;

import de.cismet.cids.editors.DefaultCustomObjectEditor;

import de.cismet.cids.navigator.utils.ClassCacheMultiple;

/**
 * DOCUMENT ME!
 *
 * @author   therter
 * @version  $Revision$, $Date$
 */
public class WkFgPanTen extends javax.swing.JPanel implements DisposableCidsBeanStore {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(WkFgPanTen.class);

    //~ Instance fields --------------------------------------------------------

    private MetaClass mc = ClassCacheMultiple.getMetaClass(CidsBeanSupport.DOMAIN_NAME, "bio_mst_messungen");
    private String[][] header = {
            { "MST", "messstelle.messstelle" },       // NOI18N
            { "WK", "messstelle.wk_fg.wk_k" },        // NOI18N
            { "Jahr", "messjahr" },                   // NOI18N
            { "GK MZB", "gk_mzb_gesamt" },            // NOI18N
            { "GK MP", "gk_mp_gesamt" },              // NOI18N
            { "GK PhyP", "gk_phytoplankton_gesamt" }, // NOI18N
            { "GK Fische", "gk_fische_gesamt" }       // NOI18N
        };
    private final de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanTen.MstTableModel model =
        new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanTen.MstTableModel(mc, header);

    private CidsBean cidsBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbMzbMst;
    private javax.swing.JButton jbMzbMst1;
    private javax.swing.JButton jbMzbMst2;
    private javax.swing.JButton jbMzbMst3;
    private javax.swing.JTable jtMstTab1;
    private javax.swing.JLabel lblBenInv;
    private javax.swing.JLabel lblBioGkBemerkung;
    private javax.swing.JLabel lblBioGkJahr;
    private javax.swing.JLabel lblBio_gk;
    private javax.swing.JLabel lblFish;
    private javax.swing.JLabel lblGK;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblMacPhyto;
    private javax.swing.JLabel lblPhyto;
    private javax.swing.JLabel lblPhytoGkMst;
    private javax.swing.JLabel lblPlaus;
    private javax.swing.JLabel lblValBenInv;
    private javax.swing.JLabel lblValBenInvBemerk;
    private javax.swing.JLabel lblValBenInvJahr;
    private javax.swing.JLabel lblValBenInvMst;
    private javax.swing.JLabel lblValBioGk;
    private javax.swing.JLabel lblValBioGkBemerk;
    private javax.swing.JLabel lblValBioGkJahr;
    private javax.swing.JLabel lblValConf;
    private javax.swing.JLabel lblValFish;
    private javax.swing.JLabel lblValFishBemerk;
    private javax.swing.JLabel lblValFishJahr;
    private javax.swing.JLabel lblValFishMst;
    private javax.swing.JLabel lblValMacPhyto;
    private javax.swing.JLabel lblValMacPhytoBemerk;
    private javax.swing.JLabel lblValMacPhytoJahr;
    private javax.swing.JLabel lblValMacPhytoMst;
    private javax.swing.JLabel lblValPhyto;
    private javax.swing.JLabel lblValPhytoGkBemerk;
    private javax.swing.JLabel lblValPhytoGkJahr;
    private javax.swing.JLabel lblValPhytoGkMst;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo;
    private de.cismet.tools.gui.RoundedPanel panInfo;
    private javax.swing.JPanel panInfoContent;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WkFgPanOne.
     */
    public WkFgPanTen() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panInfo = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading = new javax.swing.JLabel();
        panInfoContent = new javax.swing.JPanel();
        lblBio_gk = new javax.swing.JLabel();
        lblBioGkJahr = new javax.swing.JLabel();
        lblBioGkBemerkung = new javax.swing.JLabel();
        lblGK = new javax.swing.JLabel();
        lblPhyto = new javax.swing.JLabel();
        lblPhytoGkMst = new javax.swing.JLabel();
        lblBenInv = new javax.swing.JLabel();
        lblMacPhyto = new javax.swing.JLabel();
        lblFish = new javax.swing.JLabel();
        jbMzbMst = new javax.swing.JButton();
        jbMzbMst1 = new javax.swing.JButton();
        jbMzbMst2 = new javax.swing.JButton();
        jbMzbMst3 = new javax.swing.JButton();
        lblPlaus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtMstTab1 = new javax.swing.JTable();
        lblValBioGk = new javax.swing.JLabel();
        lblValBenInv = new javax.swing.JLabel();
        lblValMacPhyto = new javax.swing.JLabel();
        lblValPhyto = new javax.swing.JLabel();
        lblValFish = new javax.swing.JLabel();
        lblValBioGkJahr = new javax.swing.JLabel();
        lblValBenInvJahr = new javax.swing.JLabel();
        lblValMacPhytoJahr = new javax.swing.JLabel();
        lblValPhytoGkJahr = new javax.swing.JLabel();
        lblValFishJahr = new javax.swing.JLabel();
        lblValBenInvMst = new javax.swing.JLabel();
        lblValMacPhytoMst = new javax.swing.JLabel();
        lblValPhytoGkMst = new javax.swing.JLabel();
        lblValFishMst = new javax.swing.JLabel();
        lblValBioGkBemerk = new javax.swing.JLabel();
        lblValBenInvBemerk = new javax.swing.JLabel();
        lblValMacPhytoBemerk = new javax.swing.JLabel();
        lblValPhytoGkBemerk = new javax.swing.JLabel();
        lblValFishBemerk = new javax.swing.JLabel();
        lblValConf = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1150, 650));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1150, 650));
        setLayout(new java.awt.BorderLayout());

        panHeadInfo.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setLayout(new java.awt.FlowLayout());

        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblHeading.text")); // NOI18N
        panHeadInfo.add(lblHeading);

        panInfo.add(panHeadInfo, java.awt.BorderLayout.NORTH);

        panInfoContent.setMaximumSize(new java.awt.Dimension(777, 400));
        panInfoContent.setMinimumSize(new java.awt.Dimension(777, 400));
        panInfoContent.setOpaque(false);
        panInfoContent.setPreferredSize(new java.awt.Dimension(777, 400));
        panInfoContent.setLayout(new java.awt.GridBagLayout());

        lblBio_gk.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblBio_gk.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblBio_gk, gridBagConstraints);

        lblBioGkJahr.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblBioGkJahr.text")); // NOI18N
        lblBioGkJahr.setMinimumSize(new java.awt.Dimension(40, 17));
        lblBioGkJahr.setPreferredSize(new java.awt.Dimension(40, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblBioGkJahr, gridBagConstraints);

        lblBioGkBemerkung.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanTen.class,
                "WkFgPanTen.lblBioGkBemerkung.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblBioGkBemerkung, gridBagConstraints);

        lblGK.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanFive.lblGK.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblGK, gridBagConstraints);

        lblPhyto.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblPhyto.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblPhyto, gridBagConstraints);

        lblPhytoGkMst.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblPhytoGkMst.text")); // NOI18N
        lblPhytoGkMst.setMinimumSize(new java.awt.Dimension(80, 20));
        lblPhytoGkMst.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblPhytoGkMst, gridBagConstraints);

        lblBenInv.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblBenInv.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblBenInv, gridBagConstraints);

        lblMacPhyto.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblMacPhytoGk.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblMacPhyto, gridBagConstraints);

        lblFish.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblFish.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblFish, gridBagConstraints);

        jbMzbMst.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.jbMzbMst.text")); // NOI18N
        jbMzbMst.setMinimumSize(new java.awt.Dimension(120, 20));
        jbMzbMst.setPreferredSize(new java.awt.Dimension(120, 20));
        jbMzbMst.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jbMzbMstActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(jbMzbMst, gridBagConstraints);

        jbMzbMst1.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.jbMzbMst.text")); // NOI18N
        jbMzbMst1.setMinimumSize(new java.awt.Dimension(120, 20));
        jbMzbMst1.setPreferredSize(new java.awt.Dimension(120, 20));
        jbMzbMst1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jbMzbMst1ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(jbMzbMst1, gridBagConstraints);

        jbMzbMst2.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.jbMzbMst.text")); // NOI18N
        jbMzbMst2.setMinimumSize(new java.awt.Dimension(120, 20));
        jbMzbMst2.setPreferredSize(new java.awt.Dimension(120, 20));
        jbMzbMst2.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jbMzbMst2ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(jbMzbMst2, gridBagConstraints);

        jbMzbMst3.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.jbMzbMst.text")); // NOI18N
        jbMzbMst3.setMinimumSize(new java.awt.Dimension(120, 20));
        jbMzbMst3.setPreferredSize(new java.awt.Dimension(120, 20));
        jbMzbMst3.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jbMzbMst3ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(jbMzbMst3, gridBagConstraints);

        lblPlaus.setText(org.openide.util.NbBundle.getMessage(WkFgPanTen.class, "WkFgPanTen.lblPlaus.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblPlaus, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        panInfoContent.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        panInfoContent.add(jLabel2, gridBagConstraints);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(800, 240));
        jScrollPane3.setOpaque(false);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(800, 240));

        jtMstTab1.setModel(model);
        jScrollPane3.setViewportView(jtMstTab1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
        panInfoContent.add(jScrollPane3, gridBagConstraints);

        lblValBioGk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBioGk.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValBioGk.setPreferredSize(new java.awt.Dimension(200, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.bio_gk.name}"),
                lblValBioGk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBioGk, gridBagConstraints);

        lblValBenInv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBenInv.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValBenInv.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv.name}"),
                lblValBenInv,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBenInv, gridBagConstraints);

        lblValMacPhyto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValMacPhyto.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValMacPhyto.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto.name}"),
                lblValMacPhyto,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValMacPhyto, gridBagConstraints);

        lblValPhyto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValPhyto.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValPhyto.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto.name}"),
                lblValPhyto,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValPhyto, gridBagConstraints);

        lblValFish.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValFish.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValFish.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish.name}"),
                lblValFish,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValFish, gridBagConstraints);

        lblValBioGkJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBioGkJahr.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValBioGkJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValBioGkJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.bio_gk_jahr}"),
                lblValBioGkJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBioGkJahr, gridBagConstraints);

        lblValBenInvJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBenInvJahr.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValBenInvJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValBenInvJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv_gk_jahr}"),
                lblValBenInvJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBenInvJahr, gridBagConstraints);

        lblValMacPhytoJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValMacPhytoJahr.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValMacPhytoJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValMacPhytoJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto_gk_jahr}"),
                lblValMacPhytoJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValMacPhytoJahr, gridBagConstraints);

        lblValPhytoGkJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValPhytoGkJahr.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValPhytoGkJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValPhytoGkJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto_gk_jahr}"),
                lblValPhytoGkJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValPhytoGkJahr, gridBagConstraints);

        lblValFishJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValFishJahr.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValFishJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValFishJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish_gk_jahr}"),
                lblValFishJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValFishJahr, gridBagConstraints);

        lblValBenInvMst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBenInvMst.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValBenInvMst.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValBenInvMst.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv_gk_mst}"),
                lblValBenInvMst,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBenInvMst, gridBagConstraints);

        lblValMacPhytoMst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValMacPhytoMst.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValMacPhytoMst.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValMacPhytoMst.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto_gk_mst}"),
                lblValMacPhytoMst,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValMacPhytoMst, gridBagConstraints);

        lblValPhytoGkMst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValPhytoGkMst.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValPhytoGkMst.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValPhytoGkMst.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto_gk_mst}"),
                lblValPhytoGkMst,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValPhytoGkMst, gridBagConstraints);

        lblValFishMst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValFishMst.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValFishMst.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValFishMst.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish_gk_mst}"),
                lblValFishMst,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValFishMst, gridBagConstraints);

        lblValBioGkBemerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBioGkBemerk.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValBioGkBemerk.setMinimumSize(new java.awt.Dimension(320, 20));
        lblValBioGkBemerk.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.bio_gk_bemerkung}"),
                lblValBioGkBemerk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBioGkBemerk, gridBagConstraints);

        lblValBenInvBemerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValBenInvBemerk.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValBenInvBemerk.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValBenInvBemerk.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv_gk_bemerkung}"),
                lblValBenInvBemerk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValBenInvBemerk, gridBagConstraints);

        lblValMacPhytoBemerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValMacPhytoBemerk.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValMacPhytoBemerk.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValMacPhytoBemerk.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto_gk_bemerkung}"),
                lblValMacPhytoBemerk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValMacPhytoBemerk, gridBagConstraints);

        lblValPhytoGkBemerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValPhytoGkBemerk.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValPhytoGkBemerk.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValPhytoGkBemerk.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto_gk_bemerkung}"),
                lblValPhytoGkBemerk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValPhytoGkBemerk, gridBagConstraints);

        lblValFishBemerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValFishBemerk.setMaximumSize(new java.awt.Dimension(115, 17));
        lblValFishBemerk.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValFishBemerk.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish_gk_bemerkung}"),
                lblValFishBemerk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValFishBemerk, gridBagConstraints);

        lblValConf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValConf.setMaximumSize(new java.awt.Dimension(155, 17));
        lblValConf.setMinimumSize(new java.awt.Dimension(150, 20));
        lblValConf.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.confidence.name}"),
                lblValConf,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValConf, gridBagConstraints);

        panInfo.add(panInfoContent, java.awt.BorderLayout.CENTER);

        add(panInfo, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jbMzbMstActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMzbMstActionPerformed
        new Thread(new Runnable() {

                @Override
                public void run() {
                    model.refreshData("gk_mzb_gesamt", cidsBean);     // NOI18N
                }
            }).start();
    }//GEN-LAST:event_jbMzbMstActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jbMzbMst1ActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMzbMst1ActionPerformed
        new Thread(new Runnable() {

                @Override
                public void run() {
                    model.refreshData("gk_mp_gesamt", cidsBean);     // NOI18N
                }
            }).start();
    }//GEN-LAST:event_jbMzbMst1ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jbMzbMst2ActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMzbMst2ActionPerformed
        new Thread(new Runnable() {

                @Override
                public void run() {
                    model.refreshData("gk_phytoplankton_gesamt", cidsBean);     // NOI18N
                }
            }).start();
    }//GEN-LAST:event_jbMzbMst2ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jbMzbMst3ActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMzbMst3ActionPerformed
        new Thread(new Runnable() {

                @Override
                public void run() {
                    model.refreshData("gk_fische_gesamt", cidsBean);     // NOI18N
                }
            }).start();
    }//GEN-LAST:event_jbMzbMst3ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        if (cidsBean != null) {
            this.cidsBean = cidsBean;
            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(
                bindingGroup,
                this.cidsBean);
            bindingGroup.bind();
        }
    }

    @Override
    public void dispose() {
        model.clearModel();
        bindingGroup.unbind();
    }
}
