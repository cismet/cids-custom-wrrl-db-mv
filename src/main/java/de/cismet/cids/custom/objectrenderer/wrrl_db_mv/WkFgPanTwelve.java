/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * WkFgPanOne.java
 *
 * Created on 04.08.2010, 13:44:05
 */
package de.cismet.cids.custom.objectrenderer.wrrl_db_mv;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.DisposableCidsBeanStore;

import de.cismet.cids.editors.DefaultCustomObjectEditor;

/**
 * DOCUMENT ME!
 *
 * @author   therter
 * @version  $Revision$, $Date$
 */
public class WkFgPanTwelve extends javax.swing.JPanel implements DisposableCidsBeanStore, PropertyChangeListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(WkFgPanTwelve.class);

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBemerk;
    private javax.swing.JLabel lblBewertung;
    private javax.swing.JLabel lblBiolQk;
    private javax.swing.JLabel lblBiolQk1;
    private javax.swing.JLabel lblBiolQk2;
    private javax.swing.JLabel lblEco;
    private javax.swing.JLabel lblEcoPot;
    private javax.swing.JLabel lblEcoStat;
    private javax.swing.JLabel lblEcoStoffe;
    private javax.swing.JLabel lblFische;
    private javax.swing.JLabel lblFische1;
    private javax.swing.JLabel lblFische2;
    private javax.swing.JLabel lblGenCond;
    private javax.swing.JLabel lblGk;
    private javax.swing.JLabel lblGkHm;
    private javax.swing.JLabel lblGkPcQk;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHymoJahr;
    private javax.swing.JLabel lblHymoQk;
    private javax.swing.JLabel lblJahr;
    private javax.swing.JLabel lblJahrCol;
    private javax.swing.JLabel lblMakrophyt;
    private javax.swing.JLabel lblMakrophyt1;
    private javax.swing.JLabel lblMakrophyt2;
    private javax.swing.JLabel lblMakrozoobenthos;
    private javax.swing.JLabel lblMakrozoobenthos1;
    private javax.swing.JLabel lblMakrozoobenthos2;
    private javax.swing.JLabel lblPhysChemJahr;
    private javax.swing.JLabel lblPhyto;
    private javax.swing.JLabel lblPhyto1;
    private javax.swing.JLabel lblPhyto2;
    private javax.swing.JLabel lblSpace;
    private javax.swing.JLabel lblValEcoPotBemerkung;
    private javax.swing.JLabel lblValEcoPotGK;
    private javax.swing.JLabel lblValEcoPotJahr;
    private javax.swing.JLabel lblValEcoStatBemerkung;
    private javax.swing.JLabel lblValEcoStatGK;
    private javax.swing.JLabel lblValEcoStatJahr;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo;
    private de.cismet.tools.gui.RoundedPanel panInfo;
    private javax.swing.JPanel panInfoContent;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WkFgPanOne.
     */
    public WkFgPanTwelve() {
        initComponents();
        jScrollPane1.getViewport().setOpaque(false);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panInfo = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panInfoContent = new javax.swing.JPanel();
        lblSpace = new javax.swing.JLabel();
        lblGk = new javax.swing.JLabel();
        lblJahr = new javax.swing.JLabel();
        lblBemerk = new javax.swing.JLabel();
        lblEcoStat = new javax.swing.JLabel();
        lblEcoPot = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblBiolQk = new javax.swing.JLabel();
        lblMakrozoobenthos = new javax.swing.JLabel();
        lblPhyto = new javax.swing.JLabel();
        lblMakrophyt = new javax.swing.JLabel();
        lblFische = new javax.swing.JLabel();
        lblBiolQk1 = new javax.swing.JLabel();
        lblMakrozoobenthos1 = new javax.swing.JLabel();
        lblPhyto1 = new javax.swing.JLabel();
        lblMakrophyt1 = new javax.swing.JLabel();
        lblFische1 = new javax.swing.JLabel();
        lblBiolQk2 = new javax.swing.JLabel();
        lblMakrozoobenthos2 = new javax.swing.JLabel();
        lblPhyto2 = new javax.swing.JLabel();
        lblMakrophyt2 = new javax.swing.JLabel();
        lblFische2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblBewertung = new javax.swing.JLabel();
        lblJahrCol = new javax.swing.JLabel();
        lblHymoQk = new javax.swing.JLabel();
        lblGkHm = new javax.swing.JLabel();
        lblHymoJahr = new javax.swing.JLabel();
        lblGenCond = new javax.swing.JLabel();
        lblGkPcQk = new javax.swing.JLabel();
        lblPhysChemJahr = new javax.swing.JLabel();
        lblEco = new javax.swing.JLabel();
        lblEcoStoffe = new javax.swing.JLabel();
        lblValEcoStatGK = new javax.swing.JLabel();
        lblValEcoPotGK = new javax.swing.JLabel();
        lblValEcoStatJahr = new javax.swing.JLabel();
        lblValEcoPotJahr = new javax.swing.JLabel();
        lblValEcoStatBemerkung = new javax.swing.JLabel();
        lblValEcoPotBemerkung = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(910, 650));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(910, 650));
        setLayout(new java.awt.BorderLayout());

        panHeadInfo.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setLayout(new java.awt.FlowLayout());

        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblHeading.text")); // NOI18N
        panHeadInfo.add(lblHeading);

        panInfo.add(panHeadInfo, java.awt.BorderLayout.NORTH);

        jScrollPane1.setBorder(null);
        jScrollPane1.setOpaque(false);

        panInfoContent.setMaximumSize(new java.awt.Dimension(777, 400));
        panInfoContent.setMinimumSize(new java.awt.Dimension(777, 400));
        panInfoContent.setOpaque(false);
        panInfoContent.setPreferredSize(new java.awt.Dimension(777, 400));
        panInfoContent.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weighty = 1.0;
        panInfoContent.add(lblSpace, gridBagConstraints);

        lblGk.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanEleven.lblHydromorph.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblGk, gridBagConstraints);

        lblJahr.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPaneleven.lblHymoGkJahr.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblJahr, gridBagConstraints);

        lblBemerk.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanEleven.lblBemerk.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(lblBemerk, gridBagConstraints);

        lblEcoStat.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanEleven.lblEcoStat.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblEcoStat, gridBagConstraints);

        lblEcoPot.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanEleven.lblEcoPat.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblEcoPot, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblBiolQk.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblBiolQk.text")); // NOI18N
        lblBiolQk.setMinimumSize(new java.awt.Dimension(230, 20));
        lblBiolQk.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblBiolQk, gridBagConstraints);

        lblMakrozoobenthos.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanTwelve.class,
                "WkFgPanTwelve.lblMakrozoobenthos.text")); // NOI18N
        lblMakrozoobenthos.setMinimumSize(new java.awt.Dimension(230, 20));
        lblMakrozoobenthos.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrozoobenthos, gridBagConstraints);

        lblPhyto.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblPhyto.text")); // NOI18N
        lblPhyto.setMinimumSize(new java.awt.Dimension(230, 20));
        lblPhyto.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblPhyto, gridBagConstraints);

        lblMakrophyt.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanTwelve.class,
                "WkFgPanTwelve.lblMakrophyt.text")); // NOI18N
        lblMakrophyt.setMinimumSize(new java.awt.Dimension(230, 20));
        lblMakrophyt.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrophyt, gridBagConstraints);

        lblFische.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblFische.text")); // NOI18N
        lblFische.setMinimumSize(new java.awt.Dimension(230, 20));
        lblFische.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblFische, gridBagConstraints);

        lblBiolQk1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBiolQk1.setMinimumSize(new java.awt.Dimension(200, 20));
        lblBiolQk1.setPreferredSize(new java.awt.Dimension(200, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.bio_gk.name}"),
                lblBiolQk1,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblBiolQk1, gridBagConstraints);

        lblMakrozoobenthos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMakrozoobenthos1.setMinimumSize(new java.awt.Dimension(200, 20));
        lblMakrozoobenthos1.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv.name}"),
                lblMakrozoobenthos1,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrozoobenthos1, gridBagConstraints);

        lblPhyto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhyto1.setMinimumSize(new java.awt.Dimension(200, 20));
        lblPhyto1.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto.name}"),
                lblPhyto1,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblPhyto1, gridBagConstraints);

        lblMakrophyt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMakrophyt1.setMinimumSize(new java.awt.Dimension(200, 20));
        lblMakrophyt1.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto.name}"),
                lblMakrophyt1,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrophyt1, gridBagConstraints);

        lblFische1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFische1.setMinimumSize(new java.awt.Dimension(200, 20));
        lblFische1.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish.name}"),
                lblFische1,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblFische1, gridBagConstraints);

        lblBiolQk2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBiolQk2.setMinimumSize(new java.awt.Dimension(130, 20));
        lblBiolQk2.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.bio_gk_jahr}"),
                lblBiolQk2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblBiolQk2, gridBagConstraints);

        lblMakrozoobenthos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMakrozoobenthos2.setMinimumSize(new java.awt.Dimension(130, 20));
        lblMakrozoobenthos2.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ben_inv_gk_jahr}"),
                lblMakrozoobenthos2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrozoobenthos2, gridBagConstraints);

        lblPhyto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhyto2.setMinimumSize(new java.awt.Dimension(130, 20));
        lblPhyto2.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.phyto_gk_jahr}"),
                lblPhyto2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblPhyto2, gridBagConstraints);

        lblMakrophyt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMakrophyt2.setMinimumSize(new java.awt.Dimension(130, 20));
        lblMakrophyt2.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mac_phyto_gk_jahr}"),
                lblMakrophyt2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblMakrophyt2, gridBagConstraints);

        lblFische2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFische2.setMinimumSize(new java.awt.Dimension(130, 20));
        lblFische2.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fish_gk_jahr}"),
                lblFische2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblFische2, gridBagConstraints);

        jPanel2.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        lblBewertung.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBewertung.setText(org.openide.util.NbBundle.getMessage(
                WkFgPanTwelve.class,
                "WkFgPanTwelve.lblBewertung.text")); // NOI18N
        lblBewertung.setMinimumSize(new java.awt.Dimension(200, 20));
        lblBewertung.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblBewertung, gridBagConstraints);

        lblJahrCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJahrCol.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblJahrCol.text")); // NOI18N
        lblJahrCol.setMinimumSize(new java.awt.Dimension(130, 20));
        lblJahrCol.setPreferredSize(new java.awt.Dimension(130, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblJahrCol, gridBagConstraints);

        lblHymoQk.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblHymoQk.text")); // NOI18N
        lblHymoQk.setMinimumSize(new java.awt.Dimension(230, 20));
        lblHymoQk.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblHymoQk, gridBagConstraints);

        lblGkHm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGkHm.setMinimumSize(new java.awt.Dimension(200, 20));
        lblGkHm.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.hydromorph.name}"),
                lblGkHm,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblGkHm, gridBagConstraints);

        lblHymoJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHymoJahr.setMinimumSize(new java.awt.Dimension(130, 20));
        lblHymoJahr.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.hymo_gk_jahr}"),
                lblHymoJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblHymoJahr, gridBagConstraints);

        lblGenCond.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblGenCond.text")); // NOI18N
        lblGenCond.setMinimumSize(new java.awt.Dimension(230, 20));
        lblGenCond.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblGenCond, gridBagConstraints);

        lblGkPcQk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGkPcQk.setMinimumSize(new java.awt.Dimension(200, 20));
        lblGkPcQk.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.gk_pc_qk.name}"),
                lblGkPcQk,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblGkPcQk, gridBagConstraints);

        lblPhysChemJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhysChemJahr.setMinimumSize(new java.awt.Dimension(130, 20));
        lblPhysChemJahr.setPreferredSize(new java.awt.Dimension(130, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.jahr_pcqk}"),
                lblPhysChemJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblPhysChemJahr, gridBagConstraints);

        lblEco.setText(org.openide.util.NbBundle.getMessage(WkFgPanTwelve.class, "WkFgPanTwelve.lblEco.text")); // NOI18N
        lblEco.setMinimumSize(new java.awt.Dimension(230, 20));
        lblEco.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEco, gridBagConstraints);

        lblEcoStoffe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEcoStoffe.setMinimumSize(new java.awt.Dimension(200, 20));
        lblEcoStoffe.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.non_comp.name}"),
                lblEcoStoffe,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblEcoStoffe, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 5, 5);
        panInfoContent.add(jPanel1, gridBagConstraints);

        lblValEcoStatGK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoStatGK.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEcoStatGK.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_stat.name}"),
                lblValEcoStatGK,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoStatGK, gridBagConstraints);

        lblValEcoPotGK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoPotGK.setMinimumSize(new java.awt.Dimension(200, 20));
        lblValEcoPotGK.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_pot.name}"),
                lblValEcoPotGK,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoPotGK, gridBagConstraints);

        lblValEcoStatJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoStatJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValEcoStatJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_stat_jahr}"),
                lblValEcoStatJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoStatJahr, gridBagConstraints);

        lblValEcoPotJahr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoPotJahr.setMinimumSize(new java.awt.Dimension(110, 20));
        lblValEcoPotJahr.setPreferredSize(new java.awt.Dimension(110, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_pot_jahr}"),
                lblValEcoPotJahr,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoPotJahr, gridBagConstraints);

        lblValEcoStatBemerkung.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoStatBemerkung.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValEcoStatBemerkung.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_stat_bemerkung}"),
                lblValEcoStatBemerkung,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_stat_bemerkung}"),
                lblValEcoStatBemerkung,
                org.jdesktop.beansbinding.BeanProperty.create("toolTipText"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoStatBemerkung, gridBagConstraints);

        lblValEcoPotBemerkung.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValEcoPotBemerkung.setMinimumSize(new java.awt.Dimension(300, 20));
        lblValEcoPotBemerkung.setPreferredSize(new java.awt.Dimension(300, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_pot_bemerkung}"),
                lblValEcoPotBemerkung,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("<nicht gesetzt>");
        binding.setSourceUnreadableValue("<nicht gesetzt>");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.eco_pot_bemerkung}"),
                lblValEcoPotBemerkung,
                org.jdesktop.beansbinding.BeanProperty.create("toolTipText"));
        binding.setSourceNullValue(null);
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(lblValEcoPotBemerkung, gridBagConstraints);

        jScrollPane1.setViewportView(panInfoContent);

        panInfo.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(panInfo, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        if (cidsBean != null) {
            this.cidsBean = cidsBean;
            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(
                bindingGroup,
                this.cidsBean);
            bindingGroup.bind();

            final CidsBean evk = (CidsBean)cidsBean.getProperty("evk");

            if (evk != null) {
                final String value = (String)evk.getProperty("value");
                activateGUIElements(value.equals("1"));
            }

            cidsBean.addPropertyChangeListener(this);
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param  ecoStat  DOCUMENT ME!
     */
    private void activateGUIElements(final boolean ecoStat) {
        lblEcoStat.setVisible(ecoStat);
        lblValEcoStatGK.setVisible(ecoStat);
        lblValEcoStatJahr.setVisible(ecoStat);
        lblValEcoStatBemerkung.setVisible(ecoStat);

        lblEcoPot.setVisible(!ecoStat);
        lblValEcoPotGK.setVisible(!ecoStat);
        lblValEcoPotBemerkung.setVisible(!ecoStat);
        lblValEcoPotJahr.setVisible(!ecoStat);
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();
        cidsBean.removePropertyChangeListener(this);
    }

    @Override
    public void propertyChange(final PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("evk")) {
            final CidsBean evk = (CidsBean)cidsBean.getProperty("evk");

            if (evk != null) {
                final String value = (String)evk.getProperty("value");
                activateGUIElements(value.equals("1"));
            }
        }
    }
}
