/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * GupMassnahmeSohle.java
 *
 * Created on 19.10.2011, 11:49:19
 */
package de.cismet.cids.custom.objecteditors.wrrl_db_mv;

import de.cismet.cids.custom.objectrenderer.wrrl_db_mv.LinearReferencedLineRenderer;
import de.cismet.cids.custom.wrrl_db_mv.util.ScrollableComboBox;
import de.cismet.cids.custom.wrrl_db_mv.util.TabbedPaneUITransparent;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.editors.DefaultCustomObjectEditor;
import de.cismet.cids.editors.EditorClosedEvent;
import de.cismet.cids.editors.EditorSaveListener;

import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;

/**
 * DOCUMENT ME!
 *
 * @author   therter
 * @version  $Revision$, $Date$
 */
public class GupAbschnittsinfoEditor extends javax.swing.JPanel implements CidsBeanRenderer, EditorSaveListener {

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;
    private boolean readOnly = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbAusbauzustand;
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbFische;
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbFischotter;
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbStandsicherheitLinks;
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbStandsicherheitRechts;
    private de.cismet.cids.editors.DefaultBindableReferenceCombo cbWirbellose;
    private de.cismet.cids.editors.DefaultBindableCheckboxField ccUmlandLinks;
    private de.cismet.cids.editors.DefaultBindableCheckboxField ccUmlandLinks1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel jpAbstimmungsvermerk;
    private javax.swing.JLabel lblAusbauzustand;
    private javax.swing.JLabel lblBeschreibung;
    private javax.swing.JLabel lblFische;
    private javax.swing.JLabel lblFischotter;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStandsicherheitLinks;
    private javax.swing.JLabel lblStandsicherheitRechts;
    private javax.swing.JLabel lblUmlandLinks;
    private javax.swing.JLabel lblUmlandRechts;
    private javax.swing.JLabel lblUnterPfl;
    private javax.swing.JLabel lblWirbellose;
    private javax.swing.JLabel lblWkk;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.LinearReferencedLineEditor linearReferencedLineEditor;
    private javax.swing.JPanel panDurchgaengigkeit;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo1;
    private de.cismet.tools.gui.RoundedPanel panInfo1;
    private de.cismet.tools.gui.RoundedPanel panInfo2;
    private javax.swing.JPanel panInfoContent;
    private javax.swing.JPanel panInfoContent1;
    private javax.swing.JPanel panStandsicherheit;
    private javax.swing.JScrollPane spBeschreibung;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUnterPfl;
    private javax.swing.JTextField txtWkk;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form GupMassnahmeSohle.
     */
    public GupAbschnittsinfoEditor() {
        linearReferencedLineEditor = (readOnly) ? new LinearReferencedLineRenderer() : new LinearReferencedLineEditor();
        linearReferencedLineEditor.setLineField("linie");
        linearReferencedLineEditor.setOtherLinesEnabled(false);
        initComponents();
        jTabbedPane1.setUI(new TabbedPaneUITransparent());
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        panInfo1 = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading = new javax.swing.JLabel();
        panInfoContent = new javax.swing.JPanel();
        lblWkk = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblBeschreibung = new javax.swing.JLabel();
        txtWkk = new javax.swing.JTextField();
        spBeschreibung = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        linearReferencedLineEditor = linearReferencedLineEditor;
        txtName = new javax.swing.JTextField();
        jpAbstimmungsvermerk = new javax.swing.JPanel();
        panInfo2 = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo1 = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading1 = new javax.swing.JLabel();
        panInfoContent1 = new javax.swing.JPanel();
        panDurchgaengigkeit = new javax.swing.JPanel();
        lblFische = new javax.swing.JLabel();
        cbFische = new ScrollableComboBox();
        lblFischotter = new javax.swing.JLabel();
        cbFischotter = new ScrollableComboBox();
        lblWirbellose = new javax.swing.JLabel();
        cbWirbellose = new ScrollableComboBox();
        lblAusbauzustand = new javax.swing.JLabel();
        cbAusbauzustand = new ScrollableComboBox();
        panStandsicherheit = new javax.swing.JPanel();
        lblStandsicherheitLinks = new javax.swing.JLabel();
        cbStandsicherheitLinks = new ScrollableComboBox();
        lblStandsicherheitRechts = new javax.swing.JLabel();
        cbStandsicherheitRechts = new ScrollableComboBox();
        lblUnterPfl = new javax.swing.JLabel();
        txtUnterPfl = new javax.swing.JTextField();
        ccUmlandLinks = new de.cismet.cids.editors.DefaultBindableCheckboxField();
        ccUmlandLinks1 = new de.cismet.cids.editors.DefaultBindableCheckboxField();
        lblUmlandLinks = new javax.swing.JLabel();
        lblUmlandRechts = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(994, 800));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        panHeadInfo.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setLayout(new java.awt.FlowLayout());

        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblHeading.text")); // NOI18N
        panHeadInfo.add(lblHeading);

        panInfo1.add(panHeadInfo, java.awt.BorderLayout.NORTH);

        panInfoContent.setMinimumSize(new java.awt.Dimension(1057, 250));
        panInfoContent.setOpaque(false);
        panInfoContent.setLayout(new java.awt.GridBagLayout());

        lblWkk.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblWkk.text")); // NOI18N
        lblWkk.setMaximumSize(new java.awt.Dimension(170, 17));
        lblWkk.setMinimumSize(new java.awt.Dimension(170, 17));
        lblWkk.setPreferredSize(new java.awt.Dimension(170, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 5, 5);
        panInfoContent.add(lblWkk, gridBagConstraints);

        lblName.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblName.text")); // NOI18N
        lblName.setMaximumSize(new java.awt.Dimension(170, 17));
        lblName.setMinimumSize(new java.awt.Dimension(170, 17));
        lblName.setPreferredSize(new java.awt.Dimension(170, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblName, gridBagConstraints);

        lblBeschreibung.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblBeschreibung.text")); // NOI18N
        lblBeschreibung.setMaximumSize(new java.awt.Dimension(170, 17));
        lblBeschreibung.setMinimumSize(new java.awt.Dimension(170, 17));
        lblBeschreibung.setPreferredSize(new java.awt.Dimension(170, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent.add(lblBeschreibung, gridBagConstraints);

        txtWkk.setEnabled(false);
        txtWkk.setMaximumSize(new java.awt.Dimension(280, 20));
        txtWkk.setMinimumSize(new java.awt.Dimension(280, 20));
        txtWkk.setPreferredSize(new java.awt.Dimension(280, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 5, 5);
        panInfoContent.add(txtWkk, gridBagConstraints);

        spBeschreibung.setMaximumSize(new java.awt.Dimension(280, 90));
        spBeschreibung.setMinimumSize(new java.awt.Dimension(280, 90));
        spBeschreibung.setPreferredSize(new java.awt.Dimension(280, 90));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.beschreibung}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        spBeschreibung.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(spBeschreibung, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panInfoContent.add(linearReferencedLineEditor, gridBagConstraints);

        txtName.setMaximumSize(new java.awt.Dimension(280, 20));
        txtName.setMinimumSize(new java.awt.Dimension(280, 20));
        txtName.setPreferredSize(new java.awt.Dimension(280, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.name}"), txtName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent.add(txtName, gridBagConstraints);

        panInfo1.add(panInfoContent, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        jPanel1.add(panInfo1, gridBagConstraints);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupMassnahmeUferEditor.jPanel1.tabTitle"), jPanel1); // NOI18N

        jpAbstimmungsvermerk.setOpaque(false);
        jpAbstimmungsvermerk.setLayout(new java.awt.GridBagLayout());

        panHeadInfo1.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo1.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo1.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo1.setLayout(new java.awt.FlowLayout());

        lblHeading1.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading1.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblHeading1.text")); // NOI18N
        panHeadInfo1.add(lblHeading1);

        panInfo2.add(panHeadInfo1, java.awt.BorderLayout.NORTH);

        panInfoContent1.setMinimumSize(new java.awt.Dimension(1057, 250));
        panInfoContent1.setOpaque(false);
        panInfoContent1.setLayout(new java.awt.GridBagLayout());

        panDurchgaengigkeit.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.panDurchgaengigkeit.border.title"))); // NOI18N
        panDurchgaengigkeit.setOpaque(false);
        panDurchgaengigkeit.setLayout(new java.awt.GridBagLayout());

        lblFische.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblFische.text")); // NOI18N
        lblFische.setMaximumSize(new java.awt.Dimension(70, 17));
        lblFische.setMinimumSize(new java.awt.Dimension(70, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(lblFische, gridBagConstraints);

        cbFische.setMaximumSize(new java.awt.Dimension(170, 20));
        cbFische.setMinimumSize(new java.awt.Dimension(170, 20));
        cbFische.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.durchgaengigkeit_fische}"), cbFische, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(cbFische, gridBagConstraints);

        lblFischotter.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblFischotter.text")); // NOI18N
        lblFischotter.setMaximumSize(new java.awt.Dimension(70, 17));
        lblFischotter.setMinimumSize(new java.awt.Dimension(70, 17));
        lblFischotter.setPreferredSize(new java.awt.Dimension(70, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(lblFischotter, gridBagConstraints);

        cbFischotter.setMaximumSize(new java.awt.Dimension(170, 20));
        cbFischotter.setMinimumSize(new java.awt.Dimension(170, 20));
        cbFischotter.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.durchgaengigkeit_fischotter}"), cbFischotter, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(cbFischotter, gridBagConstraints);

        lblWirbellose.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblWirbellose.text")); // NOI18N
        lblWirbellose.setMaximumSize(new java.awt.Dimension(70, 17));
        lblWirbellose.setMinimumSize(new java.awt.Dimension(70, 17));
        lblWirbellose.setPreferredSize(new java.awt.Dimension(70, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(lblWirbellose, gridBagConstraints);

        cbWirbellose.setMaximumSize(new java.awt.Dimension(170, 20));
        cbWirbellose.setMinimumSize(new java.awt.Dimension(170, 20));
        cbWirbellose.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.durchgaengigkeit_wirbellose}"), cbWirbellose, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panDurchgaengigkeit.add(cbWirbellose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 10, 2);
        panInfoContent1.add(panDurchgaengigkeit, gridBagConstraints);

        lblAusbauzustand.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblAusbauzustand.text")); // NOI18N
        lblAusbauzustand.setMaximumSize(new java.awt.Dimension(170, 17));
        lblAusbauzustand.setMinimumSize(new java.awt.Dimension(170, 17));
        lblAusbauzustand.setPreferredSize(new java.awt.Dimension(170, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent1.add(lblAusbauzustand, gridBagConstraints);

        cbAusbauzustand.setMaximumSize(new java.awt.Dimension(280, 20));
        cbAusbauzustand.setMinimumSize(new java.awt.Dimension(280, 20));
        cbAusbauzustand.setPreferredSize(new java.awt.Dimension(280, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent1.add(cbAusbauzustand, gridBagConstraints);

        panStandsicherheit.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.panStandsicherheit.border.title"))); // NOI18N
        panStandsicherheit.setOpaque(false);
        panStandsicherheit.setLayout(new java.awt.GridBagLayout());

        lblStandsicherheitLinks.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblStandsicherheitLinks.text")); // NOI18N
        lblStandsicherheitLinks.setMaximumSize(new java.awt.Dimension(50, 17));
        lblStandsicherheitLinks.setMinimumSize(new java.awt.Dimension(50, 17));
        lblStandsicherheitLinks.setPreferredSize(new java.awt.Dimension(50, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStandsicherheit.add(lblStandsicherheitLinks, gridBagConstraints);

        cbStandsicherheitLinks.setMaximumSize(new java.awt.Dimension(170, 20));
        cbStandsicherheitLinks.setMinimumSize(new java.awt.Dimension(170, 20));
        cbStandsicherheitLinks.setPreferredSize(new java.awt.Dimension(205, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.st_boeschung_links}"), cbStandsicherheitLinks, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStandsicherheit.add(cbStandsicherheitLinks, gridBagConstraints);

        lblStandsicherheitRechts.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblStandsicherheitRechts.text")); // NOI18N
        lblStandsicherheitRechts.setMaximumSize(new java.awt.Dimension(50, 17));
        lblStandsicherheitRechts.setMinimumSize(new java.awt.Dimension(50, 17));
        lblStandsicherheitRechts.setPreferredSize(new java.awt.Dimension(50, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStandsicherheit.add(lblStandsicherheitRechts, gridBagConstraints);

        cbStandsicherheitRechts.setMaximumSize(new java.awt.Dimension(170, 20));
        cbStandsicherheitRechts.setMinimumSize(new java.awt.Dimension(170, 20));
        cbStandsicherheitRechts.setPreferredSize(new java.awt.Dimension(205, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.st_boeschung_rechts}"), cbStandsicherheitRechts, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStandsicherheit.add(cbStandsicherheitRechts, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 10, 2);
        panInfoContent1.add(panStandsicherheit, gridBagConstraints);

        lblUnterPfl.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblUnterPfl.text")); // NOI18N
        lblUnterPfl.setMaximumSize(new java.awt.Dimension(170, 17));
        lblUnterPfl.setMinimumSize(new java.awt.Dimension(170, 17));
        lblUnterPfl.setPreferredSize(new java.awt.Dimension(170, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        panInfoContent1.add(lblUnterPfl, gridBagConstraints);

        txtUnterPfl.setMaximumSize(new java.awt.Dimension(280, 20));
        txtUnterPfl.setMinimumSize(new java.awt.Dimension(280, 20));
        txtUnterPfl.setPreferredSize(new java.awt.Dimension(280, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.unterhaltspflichtiger}"), txtUnterPfl, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        panInfoContent1.add(txtUnterPfl, gridBagConstraints);

        ccUmlandLinks.setMinimumSize(new java.awt.Dimension(270, 120));
        ccUmlandLinks.setOpaque(false);
        ccUmlandLinks.setPreferredSize(new java.awt.Dimension(150, 200));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.umlandnutzung_links}"), ccUmlandLinks, org.jdesktop.beansbinding.BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent1.add(ccUmlandLinks, gridBagConstraints);

        ccUmlandLinks1.setMinimumSize(new java.awt.Dimension(270, 120));
        ccUmlandLinks1.setOpaque(false);
        ccUmlandLinks1.setPreferredSize(new java.awt.Dimension(150, 200));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.umlandnutzung_rechts}"), ccUmlandLinks1, org.jdesktop.beansbinding.BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent1.add(ccUmlandLinks1, gridBagConstraints);

        lblUmlandLinks.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblUmlandLinks.text")); // NOI18N
        lblUmlandLinks.setMaximumSize(new java.awt.Dimension(150, 17));
        lblUmlandLinks.setMinimumSize(new java.awt.Dimension(150, 17));
        lblUmlandLinks.setPreferredSize(new java.awt.Dimension(150, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panInfoContent1.add(lblUmlandLinks, gridBagConstraints);

        lblUmlandRechts.setText(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.lblUmlandRechts.text")); // NOI18N
        lblUmlandRechts.setMaximumSize(new java.awt.Dimension(150, 17));
        lblUmlandRechts.setMinimumSize(new java.awt.Dimension(150, 17));
        lblUmlandRechts.setPreferredSize(new java.awt.Dimension(150, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panInfoContent1.add(lblUmlandRechts, gridBagConstraints);

        panInfo2.add(panInfoContent1, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        jpAbstimmungsvermerk.add(panInfo2, gridBagConstraints);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(GupAbschnittsinfoEditor.class, "GupAbschnittsinfoEditor.jpDetails.tabTitle"), jpAbstimmungsvermerk); // NOI18N

        add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public CidsBean getCidsBean() {
        return this.cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        this.cidsBean = cidsBean;

        if (cidsBean != null) {
            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(
                bindingGroup,
                cidsBean);
            bindingGroup.bind();
            linearReferencedLineEditor.setCidsBean(cidsBean);
            final CidsBean bean = (CidsBean)cidsBean.getProperty("abstimmungsvermerk");
        }
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();
        linearReferencedLineEditor.dispose();
    }

    @Override
    public String getTitle() {
        return "Ufer-Maßnahme";
    }

    @Override
    public void setTitle(final String title) {
    }

    @Override
    public void editorClosed(final EditorClosedEvent event) {
    }

    @Override
    public boolean prepareForSave() {
        return true;
    }
}
