/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * GupMassnahmeSohle.java
 *
 * Created on 04.04.2012, 11:49:19
 */
package de.cismet.cids.custom.objecteditors.wrrl_db_mv;

import Sirius.navigator.connection.SessionManager;

import Sirius.server.search.CidsServerSearch;

import com.vividsolutions.jts.geom.Geometry;

import java.awt.EventQueue;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseListener;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import de.cismet.cids.client.tools.DevelopmentTools;

import de.cismet.cids.custom.wrrl_db_mv.server.search.WbvSearch;
import de.cismet.cids.custom.wrrl_db_mv.util.CidsBeanSupport;
import de.cismet.cids.custom.wrrl_db_mv.util.gup.GupHelper;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.editors.DefaultCustomObjectEditor;
import de.cismet.cids.editors.EditorClosedEvent;
import de.cismet.cids.editors.EditorSaveListener;

import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;

/**
 * DOCUMENT ME!
 *
 * @author   therter
 * @version  $Revision$, $Date$
 */
public class GupLosEditor_1 extends javax.swing.JPanel implements CidsBeanRenderer, EditorSaveListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(
            GupLosEditor.class);

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;
    private boolean readOnly = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.tools.gui.RoundedPanel glassPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlObjectList;
    private javax.swing.JList jlObjectList1;
    private javax.swing.JList jlObjectList2;
    private javax.swing.JScrollPane jsGupList;
    private javax.swing.JScrollPane jsMassnahmenList;
    private javax.swing.JScrollPane jsMassnahmenabschnittList;
    private javax.swing.JLabel lblBemerkungen;
    private javax.swing.JLabel lblBezeichnung;
    private javax.swing.JLabel lblGups;
    private javax.swing.JLabel lblMassnahmen;
    private javax.swing.JLabel lblMassnahmenabschnitte;
    private javax.swing.JTextArea teBemerkungHinweise;
    private javax.swing.JTextField txtGewaessername;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form GupMassnahmeSohle.
     */
    public GupLosEditor_1() {
        this(false);
    }

    /**
     * Creates new form GupMassnahmeSohle.
     *
     * @param  readOnly  DOCUMENT ME!
     */
    public GupLosEditor_1(final boolean readOnly) {
        this.readOnly = readOnly;
        initComponents();

        setReadOnly(readOnly);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblMassnahmen = new javax.swing.JLabel();
        lblBemerkungen = new javax.swing.JLabel();
        jsMassnahmenList = new javax.swing.JScrollPane();
        jlObjectList = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        teBemerkungHinweise = new javax.swing.JTextArea();
        lblMassnahmenabschnitte = new javax.swing.JLabel();
        jsMassnahmenabschnittList = new javax.swing.JScrollPane();
        jlObjectList1 = new javax.swing.JList();
        jsGupList = new javax.swing.JScrollPane();
        jlObjectList2 = new javax.swing.JList();
        lblGups = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblBezeichnung = new javax.swing.JLabel();
        txtGewaessername = new javax.swing.JTextField();
        glassPanel = new de.cismet.tools.gui.RoundedPanel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(994, 500));
        setLayout(new java.awt.GridBagLayout());

        lblMassnahmen.setText(org.openide.util.NbBundle.getMessage(
                GupLosEditor.class,
                "GupLosEditor.lblMassnahmen.text")); // NOI18N
        lblMassnahmen.setMaximumSize(new java.awt.Dimension(230, 17));
        lblMassnahmen.setMinimumSize(new java.awt.Dimension(230, 17));
        lblMassnahmen.setPreferredSize(new java.awt.Dimension(230, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 25);
        add(lblMassnahmen, gridBagConstraints);

        lblBemerkungen.setText(org.openide.util.NbBundle.getMessage(
                GupLosEditor.class,
                "GupLosEditor.lblBemerkungen.text")); // NOI18N
        lblBemerkungen.setMaximumSize(new java.awt.Dimension(230, 17));
        lblBemerkungen.setMinimumSize(new java.awt.Dimension(230, 17));
        lblBemerkungen.setPreferredSize(new java.awt.Dimension(230, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(lblBemerkungen, gridBagConstraints);

        jsMassnahmenList.setPreferredSize(new java.awt.Dimension(300, 154));

        jlObjectList.setModel(new javax.swing.AbstractListModel() {

                String[] strings = { "Mähboot", "Gehölzpflege", "Krautung" };

                @Override
                public int getSize() {
                    return strings.length;
                }
                @Override
                public Object getElementAt(final int i) {
                    return strings[i];
                }
            });
        jsMassnahmenList.setViewportView(jlObjectList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 25);
        add(jsMassnahmenList, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 154));

        teBemerkungHinweise.setColumns(20);
        teBemerkungHinweise.setRows(5);
        jScrollPane1.setViewportView(teBemerkungHinweise);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 25);
        add(jScrollPane1, gridBagConstraints);

        lblMassnahmenabschnitte.setText(org.openide.util.NbBundle.getMessage(
                GupLosEditor.class,
                "GupLosEditor.lblMassnahmenabschnitte.text")); // NOI18N
        lblMassnahmenabschnitte.setMaximumSize(new java.awt.Dimension(230, 17));
        lblMassnahmenabschnitte.setMinimumSize(new java.awt.Dimension(230, 17));
        lblMassnahmenabschnitte.setPreferredSize(new java.awt.Dimension(230, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(lblMassnahmenabschnitte, gridBagConstraints);

        jsMassnahmenabschnittList.setPreferredSize(new java.awt.Dimension(300, 154));

        jlObjectList1.setModel(new javax.swing.AbstractListModel() {

                String[] strings = { "Abschnitt 1", "Abschnitt 2", " " };

                @Override
                public int getSize() {
                    return strings.length;
                }
                @Override
                public Object getElementAt(final int i) {
                    return strings[i];
                }
            });
        jsMassnahmenabschnittList.setViewportView(jlObjectList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(jsMassnahmenabschnittList, gridBagConstraints);

        jsGupList.setPreferredSize(new java.awt.Dimension(300, 154));

        jlObjectList2.setModel(new javax.swing.AbstractListModel() {

                String[] strings = { "GUP 1", "GUP 2" };

                @Override
                public int getSize() {
                    return strings.length;
                }
                @Override
                public Object getElementAt(final int i) {
                    return strings[i];
                }
            });
        jsGupList.setViewportView(jlObjectList2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 15);
        add(jsGupList, gridBagConstraints);

        lblGups.setText(org.openide.util.NbBundle.getMessage(GupLosEditor.class, "GupLosEditor.lblGups.text")); // NOI18N
        lblGups.setMaximumSize(new java.awt.Dimension(230, 17));
        lblGups.setMinimumSize(new java.awt.Dimension(230, 17));
        lblGups.setPreferredSize(new java.awt.Dimension(230, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(lblGups, gridBagConstraints);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblBezeichnung.setText(org.openide.util.NbBundle.getMessage(
                GupLosEditor.class,
                "GupLosEditor.lblBezeichnung.text")); // NOI18N
        lblBezeichnung.setMaximumSize(new java.awt.Dimension(150, 17));
        lblBezeichnung.setMinimumSize(new java.awt.Dimension(150, 17));
        lblBezeichnung.setPreferredSize(new java.awt.Dimension(150, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 5, 0);
        jPanel1.add(lblBezeichnung, gridBagConstraints);

        txtGewaessername.setMaximumSize(new java.awt.Dimension(180, 20));
        txtGewaessername.setMinimumSize(new java.awt.Dimension(180, 20));
        txtGewaessername.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 5, 0);
        jPanel1.add(txtGewaessername, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 15);
        add(jPanel1, gridBagConstraints);

        glassPanel.setAlpha(0);
        glassPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(glassPanel, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public CidsBean getCidsBean() {
        return this.cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
//        bindingGroup.unbind();
//        this.cidsBean = cidsBean;
//
//        if (cidsBean != null) {
//            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(
//                bindingGroup,
//                cidsBean);
//            bindingGroup.bind();
//
//        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param  readOnly  DOCUMENT ME!
     */
    public void setReadOnly(final boolean readOnly) {
        if (readOnly) {
            glassPanel.addMouseListener(new MouseAdapter() {
                });
        } else {
            for (final MouseListener ml : glassPanel.getMouseListeners()) {
                glassPanel.removeMouseListener(ml);
            }
        }
    }

    @Override
    public void dispose() {
//        bindingGroup.unbind();
    }

    @Override
    public String getTitle() {
        return "Los";
    }

    @Override
    public void setTitle(final String title) {
    }

    @Override
    public void editorClosed(final EditorClosedEvent event) {
    }

    @Override
    public boolean prepareForSave() {
        return true;
    }

    /**
     * DOCUMENT ME!
     *
     * @param   args  DOCUMENT ME!
     *
     * @throws  Exception  DOCUMENT ME!
     */
    public static void main(final String[] args) throws Exception {
        DevelopmentTools.createEditorInFrameFromRMIConnectionOnLocalhost(
            "WRRL_DB_MV",
            "Administratoren",
            "admin",
            "x",
            "gup_los",
            1,
            1280,
            1024);
    }
}
