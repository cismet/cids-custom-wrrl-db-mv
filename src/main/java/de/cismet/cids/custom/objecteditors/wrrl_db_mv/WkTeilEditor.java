/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.objecteditors.wrrl_db_mv;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.editors.DefaultCustomObjectEditor;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class WkTeilEditor extends DefaultCustomObjectEditor {

    //~ Static fields/initializers ---------------------------------------------

    public static final String MC_WKTEIL = "wk_teil";          // NOI18N
    public static final String PROP_WKTEIL_FROM = "von";       // NOI18N
    public static final String PROP_WKTEIL_TO = "bis";         // NOI18N
    public static final String PROP_WKTEIL_GEOM = "real_geom"; // NOI18N

    // Variables declaration - do not modify//GEN-BEGIN:variables

    //~ Instance fields --------------------------------------------------------

    // NOI18N

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.LinearReferencedLineEditor linearReferencedLineEditor1;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WkTeilEditor.
     */
    public WkTeilEditor() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    public synchronized void setCidsBean(final CidsBean cidsBean) {
        try {
            super.setCidsBean(cidsBean);
        } catch (Exception ex) {
            // no bindinggroup
        }
        linearReferencedLineEditor1.setCidsBean(cidsBean);
    }

    @Override
    public synchronized CidsBean getCidsBean() {
        return linearReferencedLineEditor1.getCidsBean();
    }

    @Override
    public void dispose() {
        if (linearReferencedLineEditor1.getCidsBean() != null) {
            linearReferencedLineEditor1.dispose();
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public LinearReferencedLineEditor getWrappedEditor() {
        return linearReferencedLineEditor1;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        linearReferencedLineEditor1 = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.LinearReferencedLineEditor(
                MC_WKTEIL,
                PROP_WKTEIL_FROM,
                PROP_WKTEIL_TO,
                PROP_WKTEIL_GEOM);

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());
        add(linearReferencedLineEditor1, java.awt.BorderLayout.CENTER);
    } // </editor-fold>//GEN-END:initComponents
}
