
/*
 * WkFgEditor.java
 *
 * Created on 04.08.2010, 13:13:12
 */
package de.cismet.cids.custom.objecteditors.wrrl_db_mv;

import Sirius.navigator.connection.SessionManager;
import Sirius.server.middleware.types.MetaClass;
import de.cismet.cids.custom.util.CidsBeanSupport;
import de.cismet.cids.custom.util.TimestampConverter;
import de.cismet.cids.custom.util.UIUtil;
import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.editors.DefaultBindableReferenceCombo;
import de.cismet.cids.editors.DefaultCustomObjectEditor;
import de.cismet.cids.editors.EditorSaveListener;
import de.cismet.cids.navigator.utils.ClassCacheMultiple;
import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;
import de.cismet.cismap.commons.gui.MappingComponent;
import de.cismet.cismap.commons.interaction.CismapBroker;
import de.cismet.tools.gui.FooterComponentProvider;
import java.sql.Timestamp;
import java.util.Collection;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author therter
 */
public class ProjekteEditor extends JPanel implements CidsBeanRenderer, EditorSaveListener, FooterComponentProvider {

    private static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(ProjekteEditor.class);
    private CidsBean cidsBean;
    private static final MetaClass MASSNAHMEN_MC;

    static {
        MASSNAHMEN_MC = ClassCacheMultiple.getMetaClass(CidsBeanSupport.DOMAIN_NAME, "massnahmen");
    }


    /** Creates new form WkFgEditor */
    public ProjekteEditor() {
        initComponents();
    }


    @Override
    public void setCidsBean(CidsBean cidsBean) {
        // cidsFeature rausschmeissen
//        CidsFeature cidsFeature = new CidsFeature(cidsBean.getMetaObject());
//        Collection<Feature> features = new ArrayList<Feature>();
//        features.addAll(FeatureGroups.expandAll((FeatureGroup) cidsFeature));
//        CismapBroker.getInstance().getMappingComponent().getFeatureCollection().removeFeatures(features);

        bindingGroup.unbind();
        this.cidsBean = cidsBean;
        if (cidsBean != null) {
            DefaultCustomObjectEditor.setMetaClassInformationToMetaClassStoreComponentsInBindingGroup(bindingGroup, cidsBean);
            bindingGroup.bind();
            Object avUser = cidsBean.getProperty("av_user");
            Object avTime = cidsBean.getProperty("av_time");
            if (avUser == null) {
                avUser = "(unbekannt)";
            }
            if (avTime instanceof Timestamp) {
                avTime = TimestampConverter.getInstance().convertForward((Timestamp) avTime);
            } else {
                avTime = "(unbekannt)";
            }

            lblFoot.setText("Zuletzt bearbeitet von " + avUser + " am " + avTime);

            //zoom to feature
            MappingComponent mappingComponent = CismapBroker.getInstance().getMappingComponent();
            if (!mappingComponent.isFixedMapExtent()) {
                mappingComponent.zoomToFeatureCollection(mappingComponent.isFixedMapScale());
            }
        } else {
            lblFoot.setText("");
        }
    }

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panFooter = new javax.swing.JPanel();
        lblFoot = new javax.swing.JLabel();
        dlgUmsetzung = new javax.swing.JDialog();
        lblUmsetzungCataloge = new javax.swing.JLabel();
        cbUmsetzungCataloge = new DefaultBindableReferenceCombo(MASSNAHMEN_MC,true,true);
        panMenButtonsMeas = new javax.swing.JPanel();
        btnUmsetzungAbort = new javax.swing.JButton();
        btnUmsetzungOk = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblProjekt_nr = new javax.swing.JLabel();
        txtValProjekt_nr = new javax.swing.JTextField();
        lbltraeger = new javax.swing.JLabel();
        lblkost_gesamt = new javax.swing.JLabel();
        lblfoerdersatz = new javax.swing.JLabel();
        txtValTraeger = new javax.swing.JTextField();
        txtValFoerdersatz = new javax.swing.JTextField();
        txtValKost_gesamt = new javax.swing.JTextField();
        lblProjekt_code = new javax.swing.JLabel();
        lblM_beginn = new javax.swing.JLabel();
        lblM_ende = new javax.swing.JLabel();
        lblKost_forderf = new javax.swing.JLabel();
        lblFoerdersumme = new javax.swing.JLabel();
        txtValProjekt_code = new javax.swing.JTextField();
        txtValKost_forderf = new javax.swing.JTextField();
        txtValfoerdersumme = new javax.swing.JTextField();
        lblProjekt_bez = new javax.swing.JLabel();
        txtValProjekt_bez = new javax.swing.JTextField();
        lblSchutzgeb_wrrl = new javax.swing.JLabel();
        lblBelastung_wrrl = new javax.swing.JLabel();
        lblGewaesserkat_wrrl = new javax.swing.JLabel();
        txtValSchutzgeb_wrrl = new javax.swing.JTextField();
        txtValBelastung_wrrl = new javax.swing.JTextField();
        txtValGewaesserkat_wrrl = new javax.swing.JTextField();
        dcValM_beginn = new de.cismet.cids.editors.DefaultBindableDateChooser();
        dcValM_ende = new de.cismet.cids.editors.DefaultBindableDateChooser();
        massnahmenEditor1 = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.MassnahmenEditor();
        panDeMeas = new de.cismet.tools.gui.RoundedPanel();
        panHeadInfo2 = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeading2 = new javax.swing.JLabel();
        panInfoContent2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlUmsetzung = new javax.swing.JList();
        panContrImpactSrc = new javax.swing.JPanel();
        btnAddUmsetzung = new javax.swing.JButton();
        btnRemUmsetzung = new javax.swing.JButton();
        massnahmenUmsetzungEditor1 = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.MassnahmenUmsetzungEditor();

        panFooter.setOpaque(false);
        panFooter.setLayout(new java.awt.GridBagLayout());

        lblFoot.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblFoot.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(7, 25, 7, 25);
        panFooter.add(lblFoot, gridBagConstraints);

        dlgUmsetzung.getContentPane().setLayout(new java.awt.GridBagLayout());

        lblUmsetzungCataloge.setText(org.openide.util.NbBundle.getMessage(ProjekteEditor.class, "ProjekteEditor.lblUmsetzungCataloge.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        dlgUmsetzung.getContentPane().add(lblUmsetzungCataloge, gridBagConstraints);

        cbUmsetzungCataloge.setMinimumSize(new java.awt.Dimension(450, 18));
        cbUmsetzungCataloge.setPreferredSize(new java.awt.Dimension(450, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        dlgUmsetzung.getContentPane().add(cbUmsetzungCataloge, gridBagConstraints);

        panMenButtonsMeas.setLayout(new java.awt.GridBagLayout());

        btnUmsetzungAbort.setText(org.openide.util.NbBundle.getMessage(ProjekteEditor.class, "MassnahmenEditor.btnMeasAbort.text")); // NOI18N
        btnUmsetzungAbort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUmsetzungAbortActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMenButtonsMeas.add(btnUmsetzungAbort, gridBagConstraints);

        btnUmsetzungOk.setText(org.openide.util.NbBundle.getMessage(ProjekteEditor.class, "MassnahmenEditor.btnMeasOk.text")); // NOI18N
        btnUmsetzungOk.setMaximumSize(new java.awt.Dimension(85, 23));
        btnUmsetzungOk.setMinimumSize(new java.awt.Dimension(85, 23));
        btnUmsetzungOk.setPreferredSize(new java.awt.Dimension(85, 23));
        btnUmsetzungOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUmsetzungOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMenButtonsMeas.add(btnUmsetzungOk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        dlgUmsetzung.getContentPane().add(panMenButtonsMeas, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 1.0;
        add(jPanel2, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        lblProjekt_nr.setText("Projektnummer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel3.add(lblProjekt_nr, gridBagConstraints);

        txtValProjekt_nr.setEnabled(false);
        txtValProjekt_nr.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValProjekt_nr.setPreferredSize(new java.awt.Dimension(150, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.id}"), txtValProjekt_nr, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtValProjekt_nr, gridBagConstraints);

        lbltraeger.setText("Antragsteller");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(lbltraeger, gridBagConstraints);

        lblkost_gesamt.setText("Gesamtkosten");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(lblkost_gesamt, gridBagConstraints);

        lblfoerdersatz.setText("Fördersatz");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblfoerdersatz, gridBagConstraints);

        txtValTraeger.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValTraeger.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.traeger}"), txtValTraeger, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtValTraeger, gridBagConstraints);

        txtValFoerdersatz.setMinimumSize(new java.awt.Dimension(100, 20));
        txtValFoerdersatz.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.foerdersatz}"), txtValFoerdersatz, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(txtValFoerdersatz, gridBagConstraints);

        txtValKost_gesamt.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValKost_gesamt.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.kost_gesamt}"), txtValKost_gesamt, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtValKost_gesamt, gridBagConstraints);

        lblProjekt_code.setText("Förigef Schlüssel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(lblProjekt_code, gridBagConstraints);

        lblM_beginn.setText("Projektbeginn");
        lblM_beginn.setMinimumSize(new java.awt.Dimension(122, 17));
        lblM_beginn.setPreferredSize(new java.awt.Dimension(122, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(lblM_beginn, gridBagConstraints);

        lblM_ende.setText("Projektende");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblM_ende, gridBagConstraints);

        lblKost_forderf.setText("förderfähige Kosten");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(lblKost_forderf, gridBagConstraints);

        lblFoerdersumme.setText("Fördersumme");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblFoerdersumme, gridBagConstraints);

        txtValProjekt_code.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValProjekt_code.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.projekt_code}"), txtValProjekt_code, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtValProjekt_code, gridBagConstraints);

        txtValKost_forderf.setMinimumSize(new java.awt.Dimension(100, 20));
        txtValKost_forderf.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.kost_forderf}"), txtValKost_forderf, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel3.add(txtValKost_forderf, gridBagConstraints);

        txtValfoerdersumme.setMinimumSize(new java.awt.Dimension(100, 20));
        txtValfoerdersumme.setPreferredSize(new java.awt.Dimension(100, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.foerdersumme}"), txtValfoerdersumme, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(txtValfoerdersumme, gridBagConstraints);

        lblProjekt_bez.setText("Bez. des Projektes");
        lblProjekt_bez.setToolTipText("Bezeichnung des Projektes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblProjekt_bez, gridBagConstraints);

        txtValProjekt_bez.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValProjekt_bez.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.projekt_bez}"), txtValProjekt_bez, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtValProjekt_bez, gridBagConstraints);

        lblSchutzgeb_wrrl.setText("Schutzgebietskategorie");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblSchutzgeb_wrrl, gridBagConstraints);

        lblBelastung_wrrl.setText("Belastungsthema");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(lblBelastung_wrrl, gridBagConstraints);

        lblGewaesserkat_wrrl.setText("Gewässerkategorie");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(lblGewaesserkat_wrrl, gridBagConstraints);

        txtValSchutzgeb_wrrl.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValSchutzgeb_wrrl.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.schutzgeb_wrrl}"), txtValSchutzgeb_wrrl, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtValSchutzgeb_wrrl, gridBagConstraints);

        txtValBelastung_wrrl.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValBelastung_wrrl.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.belastung_wrrl}"), txtValBelastung_wrrl, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtValBelastung_wrrl, gridBagConstraints);

        txtValGewaesserkat_wrrl.setMinimumSize(new java.awt.Dimension(150, 20));
        txtValGewaesserkat_wrrl.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.gewaesserkat_wrrl}"), txtValGewaesserkat_wrrl, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtValGewaesserkat_wrrl, gridBagConstraints);

        dcValM_beginn.setMinimumSize(new java.awt.Dimension(150, 20));
        dcValM_beginn.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.m_beginn}"), dcValM_beginn, org.jdesktop.beansbinding.BeanProperty.create("date"));
        binding.setConverter(dcValM_beginn.getConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(dcValM_beginn, gridBagConstraints);

        dcValM_ende.setMinimumSize(new java.awt.Dimension(150, 20));
        dcValM_ende.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.m_ende}"), dcValM_ende, org.jdesktop.beansbinding.BeanProperty.create("date"));
        binding.setConverter(dcValM_ende.getConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(dcValM_ende, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel3, gridBagConstraints);

        massnahmenEditor1.setMinimumSize(new java.awt.Dimension(830, 660));
        massnahmenEditor1.setPreferredSize(new java.awt.Dimension(830, 660));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(15, 10, 0, 0);
        add(massnahmenEditor1, gridBagConstraints);

        panDeMeas.setMinimumSize(new java.awt.Dimension(290, 660));
        panDeMeas.setPreferredSize(new java.awt.Dimension(290, 660));

        panHeadInfo2.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo2.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo2.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo2.setLayout(new java.awt.FlowLayout());

        lblHeading2.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading2.setText("Umsetzungen");
        panHeadInfo2.add(lblHeading2);

        panDeMeas.add(panHeadInfo2, java.awt.BorderLayout.NORTH);

        panInfoContent2.setOpaque(false);
        panInfoContent2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(240, 500));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(240, 500));

        jlUmsetzung.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${cidsBean.umsetzung}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jlUmsetzung);
        bindingGroup.addBinding(jListBinding);

        jlUmsetzung.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlUmsetzungValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlUmsetzung);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 5);
        panInfoContent2.add(jScrollPane1, gridBagConstraints);

        panContrImpactSrc.setOpaque(false);
        panContrImpactSrc.setLayout(new java.awt.GridBagLayout());

        btnAddUmsetzung.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_add_24.png"))); // NOI18N
        btnAddUmsetzung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUmsetzungActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        panContrImpactSrc.add(btnAddUmsetzung, gridBagConstraints);

        btnRemUmsetzung.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_remove_24.png"))); // NOI18N
        btnRemUmsetzung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemUmsetzungActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        panContrImpactSrc.add(btnRemUmsetzung, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 30);
        panInfoContent2.add(panContrImpactSrc, gridBagConstraints);

        massnahmenUmsetzungEditor1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 10, 30);
        panInfoContent2.add(massnahmenUmsetzungEditor1, gridBagConstraints);

        panDeMeas.add(panInfoContent2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 10);
        add(panDeMeas, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUmsetzungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUmsetzungActionPerformed
        UIUtil.findOptimalPositionOnScreen(dlgUmsetzung);
        dlgUmsetzung.setSize(500, 150);
        dlgUmsetzung.setVisible(true);
}//GEN-LAST:event_btnAddUmsetzungActionPerformed

    private void btnRemUmsetzungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemUmsetzungActionPerformed
        final Object selection = jlUmsetzung.getSelectedValue();
        if (selection != null) {
            final int answer = JOptionPane.showConfirmDialog(this, "Soll die Umsetzung wirklich gelöscht werden?", "Umsetzung entfernen", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                try {
                    final CidsBean beanToDelete = (CidsBean) selection;
                    final Object beanColl = cidsBean.getProperty("umsetzung");
                    if (beanColl instanceof Collection) {
                        ((Collection) beanColl).remove(beanToDelete);
                        beanToDelete.delete();
                    }
                } catch (Exception e) {
                    UIUtil.showExceptionToUser(e, this);
                }
            }
        }
}//GEN-LAST:event_btnRemUmsetzungActionPerformed

    private void jlUmsetzungValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlUmsetzungValueChanged
        if (!evt.getValueIsAdjusting()) {
            Object selObj = jlUmsetzung.getSelectedValue();
            if (selObj instanceof CidsBean) {
                Object o = ((CidsBean)selObj).getProperty("massnahme");
                if (o instanceof CidsBean) {
                    massnahmenEditor1.setCidsBean( (CidsBean)o );
                    massnahmenUmsetzungEditor1.setCidsBean((CidsBean)selObj);
                }
            }
        }
    }//GEN-LAST:event_jlUmsetzungValueChanged

    private void btnUmsetzungAbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUmsetzungAbortActionPerformed
        dlgUmsetzung.setVisible(false);
}//GEN-LAST:event_btnUmsetzungAbortActionPerformed

    private void btnUmsetzungOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUmsetzungOkActionPerformed
        try {
            final Object selection = cbUmsetzungCataloge.getSelectedItem();

            if (selection instanceof CidsBean) {
                final CidsBean selectedBean = (CidsBean) selection;
                CidsBean newBean = CidsBeanSupport.createNewCidsBeanFromTableName("MASSNAHMEN_UMSETZUNG");
                Collection<CidsBean> umsetzungCollection = CidsBeanSupport.getBeanCollectionFromProperty(cidsBean, "umsetzung");
                umsetzungCollection.add(newBean);
                newBean.setProperty("massnahme", selectedBean);
            } else {
                log.error("No element selected or the selected element is no cids bean.");
            }
        } catch (Exception ex) {
            log.error(ex, ex);
        }
        dlgUmsetzung.setVisible(false);
}//GEN-LAST:event_btnUmsetzungOkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUmsetzung;
    private javax.swing.JButton btnRemUmsetzung;
    private javax.swing.JButton btnUmsetzungAbort;
    private javax.swing.JButton btnUmsetzungOk;
    private javax.swing.JComboBox cbUmsetzungCataloge;
    private de.cismet.cids.editors.DefaultBindableDateChooser dcValM_beginn;
    private de.cismet.cids.editors.DefaultBindableDateChooser dcValM_ende;
    private javax.swing.JDialog dlgUmsetzung;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlUmsetzung;
    private javax.swing.JLabel lblBelastung_wrrl;
    private javax.swing.JLabel lblFoerdersumme;
    private javax.swing.JLabel lblFoot;
    private javax.swing.JLabel lblGewaesserkat_wrrl;
    private javax.swing.JLabel lblHeading2;
    private javax.swing.JLabel lblKost_forderf;
    private javax.swing.JLabel lblM_beginn;
    private javax.swing.JLabel lblM_ende;
    private javax.swing.JLabel lblProjekt_bez;
    private javax.swing.JLabel lblProjekt_code;
    private javax.swing.JLabel lblProjekt_nr;
    private javax.swing.JLabel lblSchutzgeb_wrrl;
    private javax.swing.JLabel lblUmsetzungCataloge;
    private javax.swing.JLabel lblfoerdersatz;
    private javax.swing.JLabel lblkost_gesamt;
    private javax.swing.JLabel lbltraeger;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.MassnahmenEditor massnahmenEditor1;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.MassnahmenUmsetzungEditor massnahmenUmsetzungEditor1;
    private javax.swing.JPanel panContrImpactSrc;
    private de.cismet.tools.gui.RoundedPanel panDeMeas;
    private javax.swing.JPanel panFooter;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo2;
    private javax.swing.JPanel panInfoContent2;
    private javax.swing.JPanel panMenButtonsMeas;
    private javax.swing.JTextField txtValBelastung_wrrl;
    private javax.swing.JTextField txtValFoerdersatz;
    private javax.swing.JTextField txtValGewaesserkat_wrrl;
    private javax.swing.JTextField txtValKost_forderf;
    private javax.swing.JTextField txtValKost_gesamt;
    private javax.swing.JTextField txtValProjekt_bez;
    private javax.swing.JTextField txtValProjekt_code;
    private javax.swing.JTextField txtValProjekt_nr;
    private javax.swing.JTextField txtValSchutzgeb_wrrl;
    private javax.swing.JTextField txtValTraeger;
    private javax.swing.JTextField txtValfoerdersumme;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void dispose() {
        bindingGroup.unbind();
    }

    @Override
    public String getTitle() {
        return cidsBean.getProperty("projekt_code") + " " + String.valueOf(cidsBean);
    }

    @Override
    public void setTitle(String title) {
        //NOP
    }

    @Override
    public void editorClosed(EditorSaveStatus status) {
        //TODO ?
    }

    @Override
    public boolean prepareForSave() {
        if (cidsBean != null) {
            try {
                cidsBean.setProperty("av_user", SessionManager.getSession().getUser().toString());
                cidsBean.setProperty("av_time", new java.sql.Timestamp(System.currentTimeMillis()));
            } catch (Exception ex) {
                log.error(ex, ex);
            }
        }
        return true;
    }

    @Override
    public JComponent getFooterComponent() {
        return panFooter;
    }
}
