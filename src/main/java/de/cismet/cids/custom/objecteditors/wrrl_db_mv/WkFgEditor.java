/*
 *  Copyright (C) 2010 stefan
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * WkFgEditor.java
 *
 * Created on 04.08.2010, 13:13:12
 */
package de.cismet.cids.custom.objecteditors.wrrl_db_mv;

import de.cismet.cids.custom.util.TabbedPaneUITransparent;
import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.DisposableCidsBeanStore;
import javax.swing.JPanel;

/**
 *
 * @author stefan
 */
public class WkFgEditor extends JPanel implements DisposableCidsBeanStore {

    private static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(WkFgEditor.class);
    private CidsBean cidsBean;
    //    private final DefaultComboBoxModel qualityStatusCodeModel;

    /** Creates new form WkFgEditor */
    public WkFgEditor() {
//        try {
//            MetaClass qscMetaClass = ClassCacheMultiple.getMetaClass("WRRL_DB_MV", "quality_status_code");
//            qualityStatusCodeModel = DefaultBindableReferenceCombo.getModelByMetaClass(qscMetaClass, false);
        initComponents();
        tpMain.setUI(new TabbedPaneUITransparent());
//        } catch (Exception ex) {
//            throw new RuntimeException(ex);
//        }
    }

    @Override
    public void setCidsBean(CidsBean cidsBean) {
        this.cidsBean = cidsBean;
        wkFgPanOne.setCidsBean(cidsBean);
        wkFgPanTwo.setCidsBean(cidsBean);
        wkFgPanThree.setCidsBean(cidsBean);
        wkFgPanFour.setCidsBean(cidsBean);
        wkFgPanFive.setCidsBean(cidsBean);
        bindingGroup.unbind();
        bindingGroup.bind();
        lstAusnahmen.setSelectedIndex(lstAusnahmen.getModel().getSize() == 0 ? -1 : 0);
    }

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        tpMain = new javax.swing.JTabbedPane();
        panAllgemeines = new javax.swing.JPanel();
        wkFgPanOne = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanOne();
        panQualitaet = new javax.swing.JPanel();
        wkFgPanTwo = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanTwo();
        wkFgPanThree = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanThree();
        wkFgPanFour = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanFour();
        wkFgPanFive = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanFive();
        panSpace = new javax.swing.JLabel();
        panAusnahmen = new javax.swing.JPanel();
        excemptionEditor = new de.cismet.cids.custom.objecteditors.wrrl_db_mv.ExcemptionEditor();
        roundedPanel1 = new de.cismet.tools.gui.RoundedPanel();
        scpAusnahmen = new javax.swing.JScrollPane();
        lstAusnahmen = new javax.swing.JList();
        panContrAusnahmen = new javax.swing.JPanel();
        btnAddAusnahme = new javax.swing.JButton();
        btnRemAusnahme = new javax.swing.JButton();
        panHeadInfo = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeadingAusnahme = new javax.swing.JLabel();
        panStationen = new javax.swing.JPanel();
        roundedPanel2 = new de.cismet.tools.gui.RoundedPanel();
        scpStation = new javax.swing.JScrollPane();
        lstStation = new javax.swing.JList();
        panContrAusnahmen1 = new javax.swing.JPanel();
        btnAddStation = new javax.swing.JButton();
        btnRemStation = new javax.swing.JButton();
        panHeadInfo1 = new de.cismet.tools.gui.SemiRoundedPanel();
        lblHeadingStation = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        panAllgemeines.setOpaque(false);
        panAllgemeines.setLayout(new java.awt.GridBagLayout());

        wkFgPanOne.setMinimumSize(new java.awt.Dimension(1000, 620));
        wkFgPanOne.setPreferredSize(new java.awt.Dimension(1000, 620));
        panAllgemeines.add(wkFgPanOne, new java.awt.GridBagConstraints());

        tpMain.addTab("Allgemeines", panAllgemeines);

        panQualitaet.setOpaque(false);
        panQualitaet.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 15);
        panQualitaet.add(wkFgPanTwo, gridBagConstraints);

        wkFgPanThree.setMinimumSize(new java.awt.Dimension(450, 200));
        wkFgPanThree.setPreferredSize(new java.awt.Dimension(450, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 15);
        panQualitaet.add(wkFgPanThree, gridBagConstraints);

        wkFgPanFour.setMinimumSize(new java.awt.Dimension(450, 200));
        wkFgPanFour.setPreferredSize(new java.awt.Dimension(450, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 0);
        panQualitaet.add(wkFgPanFour, gridBagConstraints);

        wkFgPanFive.setMinimumSize(new java.awt.Dimension(450, 290));
        wkFgPanFive.setPreferredSize(new java.awt.Dimension(450, 290));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 0);
        panQualitaet.add(wkFgPanFive, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        panQualitaet.add(panSpace, gridBagConstraints);

        tpMain.addTab("Qualit√§tsinformationen", panQualitaet);

        panAusnahmen.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panAusnahmen.add(excemptionEditor, gridBagConstraints);

        roundedPanel1.setLayout(new java.awt.GridBagLayout());

        scpAusnahmen.setMinimumSize(new java.awt.Dimension(250, 175));
        scpAusnahmen.setPreferredSize(new java.awt.Dimension(250, 175));

        lstAusnahmen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${cidsBean.ausnahmen}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, lstAusnahmen);
        bindingGroup.addBinding(jListBinding);

        lstAusnahmen.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAusnahmenValueChanged(evt);
            }
        });
        scpAusnahmen.setViewportView(lstAusnahmen);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        roundedPanel1.add(scpAusnahmen, gridBagConstraints);

        panContrAusnahmen.setOpaque(false);
        panContrAusnahmen.setLayout(new java.awt.GridBagLayout());

        btnAddAusnahme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_add_mini.png"))); // NOI18N
        btnAddAusnahme.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.btnAddImpactSrc.text")); // NOI18N
        btnAddAusnahme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAusnahmeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panContrAusnahmen.add(btnAddAusnahme, gridBagConstraints);

        btnRemAusnahme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_remove_mini.png"))); // NOI18N
        btnRemAusnahme.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.btnRemImpactSrc.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panContrAusnahmen.add(btnRemAusnahme, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        roundedPanel1.add(panContrAusnahmen, gridBagConstraints);

        panHeadInfo.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo.setLayout(new java.awt.FlowLayout());

        lblHeadingAusnahme.setForeground(new java.awt.Color(255, 255, 255));
        lblHeadingAusnahme.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.lblHeading.text")); // NOI18N
        panHeadInfo.add(lblHeadingAusnahme);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        roundedPanel1.add(panHeadInfo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panAusnahmen.add(roundedPanel1, gridBagConstraints);

        tpMain.addTab("Ausnahmen", panAusnahmen);

        panStationen.setLayout(new java.awt.GridBagLayout());

        roundedPanel2.setLayout(new java.awt.GridBagLayout());

        scpStation.setMinimumSize(new java.awt.Dimension(250, 175));
        scpStation.setPreferredSize(new java.awt.Dimension(250, 175));

        lstStation.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scpStation.setViewportView(lstStation);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        roundedPanel2.add(scpStation, gridBagConstraints);

        panContrAusnahmen1.setOpaque(false);
        panContrAusnahmen1.setLayout(new java.awt.GridBagLayout());

        btnAddStation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_add_mini.png"))); // NOI18N
        btnAddStation.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.btnAddImpactSrc.text")); // NOI18N
        btnAddStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panContrAusnahmen1.add(btnAddStation, gridBagConstraints);

        btnRemStation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wrrl_db_mv/edit_remove_mini.png"))); // NOI18N
        btnRemStation.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.btnRemImpactSrc.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panContrAusnahmen1.add(btnRemStation, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        roundedPanel2.add(panContrAusnahmen1, gridBagConstraints);

        panHeadInfo1.setBackground(new java.awt.Color(51, 51, 51));
        panHeadInfo1.setMinimumSize(new java.awt.Dimension(109, 24));
        panHeadInfo1.setPreferredSize(new java.awt.Dimension(109, 24));
        panHeadInfo1.setLayout(new java.awt.FlowLayout());

        lblHeadingStation.setForeground(new java.awt.Color(255, 255, 255));
        lblHeadingStation.setText(org.openide.util.NbBundle.getMessage(WkFgEditor.class, "WkFgPanOne.lblHeading.text")); // NOI18N
        panHeadInfo1.add(lblHeadingStation);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        roundedPanel2.add(panHeadInfo1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStationen.add(roundedPanel2, gridBagConstraints);

        tpMain.addTab("Stationen", panStationen);

        add(tpMain, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAusnahmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAusnahmeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_btnAddAusnahmeActionPerformed

    private void btnAddStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddStationActionPerformed

    private void lstAusnahmenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAusnahmenValueChanged
        if (!evt.getValueIsAdjusting()) {
            Object selObj = lstAusnahmen.getSelectedValue();
            if (selObj instanceof CidsBean) {
                excemptionEditor.setCidsBean((CidsBean) selObj);
            }
        }
    }//GEN-LAST:event_lstAusnahmenValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAusnahme;
    private javax.swing.JButton btnAddStation;
    private javax.swing.JButton btnRemAusnahme;
    private javax.swing.JButton btnRemStation;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.ExcemptionEditor excemptionEditor;
    private javax.swing.JLabel lblHeadingAusnahme;
    private javax.swing.JLabel lblHeadingStation;
    private javax.swing.JList lstAusnahmen;
    private javax.swing.JList lstStation;
    private javax.swing.JPanel panAllgemeines;
    private javax.swing.JPanel panAusnahmen;
    private javax.swing.JPanel panContrAusnahmen;
    private javax.swing.JPanel panContrAusnahmen1;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo;
    private de.cismet.tools.gui.SemiRoundedPanel panHeadInfo1;
    private javax.swing.JPanel panQualitaet;
    private javax.swing.JLabel panSpace;
    private javax.swing.JPanel panStationen;
    private de.cismet.tools.gui.RoundedPanel roundedPanel1;
    private de.cismet.tools.gui.RoundedPanel roundedPanel2;
    private javax.swing.JScrollPane scpAusnahmen;
    private javax.swing.JScrollPane scpStation;
    private javax.swing.JTabbedPane tpMain;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanFive wkFgPanFive;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanFour wkFgPanFour;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanOne wkFgPanOne;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanThree wkFgPanThree;
    private de.cismet.cids.custom.objecteditors.wrrl_db_mv.WkFgPanTwo wkFgPanTwo;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void dispose() {
        wkFgPanOne.dispose();
        wkFgPanTwo.dispose();
        wkFgPanThree.dispose();
        wkFgPanFour.dispose();
        wkFgPanFive.dispose();
        excemptionEditor.dispose();
        bindingGroup.unbind();
    }
}
